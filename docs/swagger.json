{
  "swagger": "2.0",
  "schemes": [
    "http"
  ],
  "info": {
    "description": "This is a JSON API compliant implementation",
    "title": "Open Social - JSON API",
    "version": "Versioning not supported"
  },
  "host": "localhost",
  "basePath": "/jsonapi",
  "tags": [
    {
      "name": "Comment - Comment",
      "description": "Comment type Comment of type Comment. Default comment type.",
      "x-entity-type": "comment",
      "x-definition": {
        "$ref": "#/definitions/comment--comment"
      }
    },
    {
      "name": "Comment - Post comment",
      "description": "Comment type Post comment of type Comment. Comment on a post in the activity streams",
      "x-entity-type": "comment",
      "x-definition": {
        "$ref": "#/definitions/comment--post_comment"
      }
    },
    {
      "name": "File"
    },
    {
      "name": "Group - Closed group",
      "description": "Group type Closed group of type Group. This is a closed group. Users can only join by invitation and the content in the group is hidden from non members.",
      "x-entity-type": "group",
      "x-definition": {
        "$ref": "#/definitions/group--closed_group"
      }
    },
    {
      "name": "Group - Open group",
      "description": "Group type Open group of type Group. This is an open group. Users may join without approval and all content added in this group will be visible to all community members.",
      "x-entity-type": "group",
      "x-definition": {
        "$ref": "#/definitions/group--open_group"
      }
    },
    {
      "name": "Group - Public group",
      "description": "Group type Public group of type Group. This is a public group. Users may join without approval and all content added in this group will be visible to all community members and anonymous users.",
      "x-entity-type": "group",
      "x-definition": {
        "$ref": "#/definitions/group--public_group"
      }
    },
    {
      "name": "Group content - Closed group: Group membership",
      "description": "Group content type Closed group: Group membership of type Group content. Adds users to groups as members.",
      "x-entity-type": "group_content",
      "x-definition": {
        "$ref": "#/definitions/group_content--closed_group-group_membership"
      }
    },
    {
      "name": "Group content - event",
      "description": "Group content type event of type Group content. Adds <em class=\"placeholder\">Event</em> content to groups both publicly and privately.",
      "x-entity-type": "group_content",
      "x-definition": {
        "$ref": "#/definitions/group_content--closed_group-group_node-event"
      }
    },
    {
      "name": "Group content - topic",
      "description": "Group content type topic of type Group content. Adds <em class=\"placeholder\">Topic</em> content to groups both publicly and privately.",
      "x-entity-type": "group_content",
      "x-definition": {
        "$ref": "#/definitions/group_content--closed_group-group_node-topic"
      }
    },
    {
      "name": "Group content - Open group: Group membership",
      "description": "Group content type Open group: Group membership of type Group content. Adds users to groups as members.",
      "x-entity-type": "group_content",
      "x-definition": {
        "$ref": "#/definitions/group_content--open_group-group_membership"
      }
    },
    {
      "name": "Group content - event",
      "description": "Group content type event of type Group content. Adds <em class=\"placeholder\">Event</em> content to groups both publicly and privately.",
      "x-entity-type": "group_content",
      "x-definition": {
        "$ref": "#/definitions/group_content--open_group-group_node-event"
      }
    },
    {
      "name": "Group content - topic",
      "description": "Group content type topic of type Group content. Adds <em class=\"placeholder\">Topic</em> content to groups both publicly and privately.",
      "x-entity-type": "group_content",
      "x-definition": {
        "$ref": "#/definitions/group_content--open_group-group_node-topic"
      }
    },
    {
      "name": "Group content - Public group: Group membership",
      "description": "Group content type Public group: Group membership of type Group content. Adds users to groups as members.",
      "x-entity-type": "group_content",
      "x-definition": {
        "$ref": "#/definitions/group_content--public_group-group_membership"
      }
    },
    {
      "name": "Group content - event",
      "description": "Group content type event of type Group content. Adds <em class=\"placeholder\">Event</em> content to groups both publicly and privately.",
      "x-entity-type": "group_content",
      "x-definition": {
        "$ref": "#/definitions/group_content--public_group-group_node-event"
      }
    },
    {
      "name": "Group content - topic",
      "description": "Group content type topic of type Group content. Adds <em class=\"placeholder\">Topic</em> content to groups both publicly and privately.",
      "x-entity-type": "group_content",
      "x-definition": {
        "$ref": "#/definitions/group_content--public_group-group_node-topic"
      }
    },
    {
      "name": "Content - Event",
      "description": "Content type Event of type Content. ",
      "x-entity-type": "node",
      "x-definition": {
        "$ref": "#/definitions/node--event"
      }
    },
    {
      "name": "Content - Basic page",
      "description": "Content type Basic page of type Content. Use basic pages for your static content, such as an 'About us' page.",
      "x-entity-type": "node",
      "x-definition": {
        "$ref": "#/definitions/node--page"
      }
    },
    {
      "name": "Content - Topic",
      "description": "Content type Topic of type Content. ",
      "x-entity-type": "node",
      "x-definition": {
        "$ref": "#/definitions/node--topic"
      }
    },
    {
      "name": "Profile - Profile",
      "description": "Profile Profile of type Profile.",
      "x-entity-type": "profile",
      "x-definition": {
        "$ref": "#/definitions/profile--profile"
      }
    },
    {
      "name": "Event enrollment"
    },
    {
      "name": "Post - Photo",
      "description": "Post type Photo of type Post.",
      "x-entity-type": "post",
      "x-definition": {
        "$ref": "#/definitions/post--photo"
      }
    },
    {
      "name": "Post - Post",
      "description": "Post type Post of type Post.",
      "x-entity-type": "post",
      "x-definition": {
        "$ref": "#/definitions/post--post"
      }
    },
    {
      "name": "Taxonomy term - Expertise",
      "description": "Vocabulary Expertise of type Taxonomy term. A users expertises",
      "x-entity-type": "taxonomy_term",
      "x-definition": {
        "$ref": "#/definitions/taxonomy_term--expertise"
      }
    },
    {
      "name": "Taxonomy term - Interests",
      "description": "Vocabulary Interests of type Taxonomy term. A users interests for their profile.",
      "x-entity-type": "taxonomy_term",
      "x-definition": {
        "$ref": "#/definitions/taxonomy_term--interests"
      }
    },
    {
      "name": "Taxonomy term - Profile tag",
      "description": "Vocabulary Profile tag of type Taxonomy term. CM can tag a user, giving options on filtering / searching users.",
      "x-entity-type": "taxonomy_term",
      "x-definition": {
        "$ref": "#/definitions/taxonomy_term--profile_tag"
      }
    },
    {
      "name": "Taxonomy term - Content tags",
      "description": "Vocabulary Content tags of type Taxonomy term. Categories and terms used to tag content",
      "x-entity-type": "taxonomy_term",
      "x-definition": {
        "$ref": "#/definitions/taxonomy_term--social_tagging"
      }
    },
    {
      "name": "Taxonomy term - Topic types",
      "description": "Vocabulary Topic types of type Taxonomy term. Topic types",
      "x-entity-type": "taxonomy_term",
      "x-definition": {
        "$ref": "#/definitions/taxonomy_term--topic_types"
      }
    },
    {
      "name": "User"
    }
  ],
  "definitions": {
    "comment--comment": {
      "title": "comment Schema",
      "description": "Describes the payload for 'comment' entities.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "comment--comment"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__cid": {
                  "type": "integer",
                  "title": "Comment ID",
                  "description": "The comment ID."
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language",
                  "description": "The comment language code."
                },
                "status": {
                  "type": "boolean",
                  "title": "Published",
                  "default": true
                },
                "subject": {
                  "type": "string",
                  "title": "Subject",
                  "maxLength": 64
                },
                "name": {
                  "type": "string",
                  "title": "Name",
                  "maxLength": 60,
                  "description": "The comment author\\'s name.",
                  "default": ""
                },
                "mail": {
                  "type": "string",
                  "title": "Email",
                  "format": "email",
                  "description": "The comment author\\'s email address."
                },
                "homepage": {
                  "type": "uri",
                  "title": "Homepage",
                  "maxLength": 255,
                  "description": "The comment author\\'s home page address."
                },
                "hostname": {
                  "type": "string",
                  "title": "Hostname",
                  "maxLength": 128,
                  "description": "The comment author\\'s hostname."
                },
                "created": {
                  "type": "number",
                  "title": "Created",
                  "format": "utc-millisec",
                  "description": "The time that the comment was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed",
                  "format": "utc-millisec",
                  "description": "The time that the comment was last edited."
                },
                "thread": {
                  "type": "string",
                  "title": "Thread place",
                  "maxLength": 255,
                  "description": "The alphadecimal representation of the comment\\'s place in a thread, consisting of a base 36 string prefixed by an integer indicating its length."
                },
                "entity_type": {
                  "type": "string",
                  "title": "Entity type",
                  "maxLength": 32,
                  "description": "The entity type to which this comment is attached."
                },
                "field_name": {
                  "type": "string",
                  "title": "Comment field name",
                  "maxLength": 32,
                  "description": "The field name through which this comment was added."
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                }
              },
              "required": [
                "drupal_internal__cid",
                "entity_type",
                "field_name"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "comment_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "comment_type--comment_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Comment Type"
                },
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "User ID"
                },
                "pid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "comment--comment"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Parent ID"
                },
                "entity_id": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource"
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Entity ID"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "comment--post_comment": {
      "title": "comment:post_comment Schema",
      "description": "Describes the payload for 'comment' entities of the 'post_comment' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "comment--post_comment"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__cid": {
                  "type": "integer",
                  "title": "Comment ID",
                  "description": "The comment ID."
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language",
                  "description": "The comment language code."
                },
                "status": {
                  "type": "boolean",
                  "title": "Published",
                  "default": true
                },
                "subject": {
                  "type": "string",
                  "title": "Subject",
                  "maxLength": 64
                },
                "name": {
                  "type": "string",
                  "title": "Name",
                  "maxLength": 60,
                  "description": "The comment author\\'s name.",
                  "default": ""
                },
                "mail": {
                  "type": "string",
                  "title": "Email",
                  "format": "email",
                  "description": "The comment author\\'s email address."
                },
                "homepage": {
                  "type": "uri",
                  "title": "Homepage",
                  "maxLength": 255,
                  "description": "The comment author\\'s home page address."
                },
                "hostname": {
                  "type": "string",
                  "title": "Hostname",
                  "maxLength": 128,
                  "description": "The comment author\\'s hostname."
                },
                "created": {
                  "type": "number",
                  "title": "Created",
                  "format": "utc-millisec",
                  "description": "The time that the comment was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed",
                  "format": "utc-millisec",
                  "description": "The time that the comment was last edited."
                },
                "thread": {
                  "type": "string",
                  "title": "Thread place",
                  "maxLength": 255,
                  "description": "The alphadecimal representation of the comment\\'s place in a thread, consisting of a base 36 string prefixed by an integer indicating its length."
                },
                "entity_type": {
                  "type": "string",
                  "title": "Entity type",
                  "maxLength": 32,
                  "description": "The entity type to which this comment is attached."
                },
                "field_name": {
                  "type": "string",
                  "title": "Comment field name",
                  "maxLength": 32,
                  "description": "The field name through which this comment was added."
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                },
                "field_comment_body": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Text"
                    },
                    "format": {
                      "type": "string",
                      "title": "Text format"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Post comment"
                }
              },
              "required": [
                "drupal_internal__cid",
                "entity_type",
                "field_name",
                "field_comment_body"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "comment_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "comment_type--comment_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Comment Type"
                },
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "User ID"
                },
                "pid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "comment--comment"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Parent ID"
                },
                "entity_id": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "post--post"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Entity ID"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "file--file": {
      "title": "file Schema",
      "description": "Describes the payload for 'file' entities.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "file--file"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__fid": {
                  "type": "integer",
                  "title": "File ID",
                  "description": "The file ID."
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language code",
                  "description": "The file language code."
                },
                "filename": {
                  "type": "string",
                  "title": "Filename",
                  "maxLength": 255,
                  "description": "Name of the file with no path components."
                },
                "uri": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "uri",
                      "title": "URI value",
                      "maxLength": 255
                    },
                    "url": {
                      "type": "string",
                      "title": "Root-relative file URL"
                    }
                  },
                  "required": [
                    "value",
                    "url"
                  ],
                  "title": "URI",
                  "description": "The URI to access the file (either local or remote)."
                },
                "filemime": {
                  "type": "string",
                  "title": "File MIME type",
                  "maxLength": 255,
                  "description": "The file\\'s MIME type."
                },
                "filesize": {
                  "type": "integer",
                  "title": "File size",
                  "description": "The size of the file in bytes."
                },
                "status": {
                  "type": "boolean",
                  "title": "Status",
                  "description": "The status of the file, temporary (FALSE) and permanent (TRUE).",
                  "default": false
                },
                "created": {
                  "type": "number",
                  "title": "Created",
                  "format": "utc-millisec",
                  "description": "The timestamp that the file was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed",
                  "format": "utc-millisec",
                  "description": "The timestamp that the file was last changed."
                }
              },
              "required": [
                "drupal_internal__fid"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "User ID"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "group--closed_group": {
      "title": "group:closed_group Schema",
      "description": "Describes the payload for 'group' entities of the 'closed_group' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "group--closed_group"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__id": {
                  "type": "integer",
                  "title": "ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language"
                },
                "label": {
                  "type": "string",
                  "title": "Title",
                  "maxLength": 255
                },
                "created": {
                  "type": "number",
                  "title": "Created on",
                  "format": "utc-millisec",
                  "description": "The time that the group was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed on",
                  "format": "utc-millisec",
                  "description": "The time that the group was last edited."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                },
                "field_group_address": {
                  "type": "object",
                  "properties": {
                    "langcode": {
                      "type": "string",
                      "title": "The language code."
                    },
                    "country_code": {
                      "type": "string",
                      "title": "The two-letter country code."
                    },
                    "administrative_area": {
                      "type": "string",
                      "title": "The top-level administrative subdivision of the country."
                    },
                    "locality": {
                      "type": "string",
                      "title": "The locality (i.e. city)."
                    },
                    "dependent_locality": {
                      "type": "string",
                      "title": "The dependent locality (i.e. neighbourhood)."
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "The postal code."
                    },
                    "sorting_code": {
                      "type": "string",
                      "title": "The sorting code."
                    },
                    "address_line1": {
                      "type": "string",
                      "title": "The first line of the address block."
                    },
                    "address_line2": {
                      "type": "string",
                      "title": "The second line of the address block."
                    },
                    "organization": {
                      "type": "string",
                      "title": "The organization"
                    },
                    "given_name": {
                      "type": "string",
                      "title": "The given name."
                    },
                    "additional_name": {
                      "type": "string",
                      "title": "The additional name."
                    },
                    "family_name": {
                      "type": "string",
                      "title": "The family name."
                    }
                  },
                  "title": "Address"
                },
                "field_group_description": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Text"
                    },
                    "format": {
                      "type": "string",
                      "title": "Text format"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Description"
                },
                "field_group_location": {
                  "type": "string",
                  "title": "Location name",
                  "maxLength": 255
                }
              },
              "required": [
                "drupal_internal__id",
                "label",
                "path"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "group_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group_type--group_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group type"
                },
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group creator"
                },
                "social_tagging": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Referenced resource",
                            "enum": [
                              "taxonomy_term--social_tagging"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                          }
                        }
                      }
                    }
                  },
                  "title": "Tagging"
                },
                "field_group_image": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "file--file"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group Image"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "group--open_group": {
      "title": "group:open_group Schema",
      "description": "Describes the payload for 'group' entities of the 'open_group' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "group--open_group"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__id": {
                  "type": "integer",
                  "title": "ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language"
                },
                "label": {
                  "type": "string",
                  "title": "Title",
                  "maxLength": 255
                },
                "created": {
                  "type": "number",
                  "title": "Created on",
                  "format": "utc-millisec",
                  "description": "The time that the group was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed on",
                  "format": "utc-millisec",
                  "description": "The time that the group was last edited."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                },
                "field_group_address": {
                  "type": "object",
                  "properties": {
                    "langcode": {
                      "type": "string",
                      "title": "The language code."
                    },
                    "country_code": {
                      "type": "string",
                      "title": "The two-letter country code."
                    },
                    "administrative_area": {
                      "type": "string",
                      "title": "The top-level administrative subdivision of the country."
                    },
                    "locality": {
                      "type": "string",
                      "title": "The locality (i.e. city)."
                    },
                    "dependent_locality": {
                      "type": "string",
                      "title": "The dependent locality (i.e. neighbourhood)."
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "The postal code."
                    },
                    "sorting_code": {
                      "type": "string",
                      "title": "The sorting code."
                    },
                    "address_line1": {
                      "type": "string",
                      "title": "The first line of the address block."
                    },
                    "address_line2": {
                      "type": "string",
                      "title": "The second line of the address block."
                    },
                    "organization": {
                      "type": "string",
                      "title": "The organization"
                    },
                    "given_name": {
                      "type": "string",
                      "title": "The given name."
                    },
                    "additional_name": {
                      "type": "string",
                      "title": "The additional name."
                    },
                    "family_name": {
                      "type": "string",
                      "title": "The family name."
                    }
                  },
                  "title": "Address"
                },
                "field_group_description": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Text"
                    },
                    "format": {
                      "type": "string",
                      "title": "Text format"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Description"
                },
                "field_group_location": {
                  "type": "string",
                  "title": "Location name",
                  "maxLength": 255
                }
              },
              "required": [
                "drupal_internal__id",
                "label",
                "path"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "group_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group_type--group_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group type"
                },
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group creator"
                },
                "social_tagging": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Referenced resource",
                            "enum": [
                              "taxonomy_term--social_tagging"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                          }
                        }
                      }
                    }
                  },
                  "title": "Tagging"
                },
                "field_group_image": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "file--file"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group Image"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "group--public_group": {
      "title": "group:public_group Schema",
      "description": "Describes the payload for 'group' entities of the 'public_group' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "group--public_group"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__id": {
                  "type": "integer",
                  "title": "ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language"
                },
                "label": {
                  "type": "string",
                  "title": "Title",
                  "maxLength": 255
                },
                "created": {
                  "type": "number",
                  "title": "Created on",
                  "format": "utc-millisec",
                  "description": "The time that the group was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed on",
                  "format": "utc-millisec",
                  "description": "The time that the group was last edited."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                },
                "field_group_address": {
                  "type": "object",
                  "properties": {
                    "langcode": {
                      "type": "string",
                      "title": "The language code."
                    },
                    "country_code": {
                      "type": "string",
                      "title": "The two-letter country code."
                    },
                    "administrative_area": {
                      "type": "string",
                      "title": "The top-level administrative subdivision of the country."
                    },
                    "locality": {
                      "type": "string",
                      "title": "The locality (i.e. city)."
                    },
                    "dependent_locality": {
                      "type": "string",
                      "title": "The dependent locality (i.e. neighbourhood)."
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "The postal code."
                    },
                    "sorting_code": {
                      "type": "string",
                      "title": "The sorting code."
                    },
                    "address_line1": {
                      "type": "string",
                      "title": "The first line of the address block."
                    },
                    "address_line2": {
                      "type": "string",
                      "title": "The second line of the address block."
                    },
                    "organization": {
                      "type": "string",
                      "title": "The organization"
                    },
                    "given_name": {
                      "type": "string",
                      "title": "The given name."
                    },
                    "additional_name": {
                      "type": "string",
                      "title": "The additional name."
                    },
                    "family_name": {
                      "type": "string",
                      "title": "The family name."
                    }
                  },
                  "title": "Address"
                },
                "field_group_description": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Text"
                    },
                    "format": {
                      "type": "string",
                      "title": "Text format"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Description"
                },
                "field_group_location": {
                  "type": "string",
                  "title": "Location name",
                  "maxLength": 255
                }
              },
              "required": [
                "drupal_internal__id",
                "label",
                "path"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "group_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group_type--group_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group type"
                },
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group creator"
                },
                "social_tagging": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Referenced resource",
                            "enum": [
                              "taxonomy_term--social_tagging"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                          }
                        }
                      }
                    }
                  },
                  "title": "Tagging"
                },
                "field_group_image": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "file--file"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group Image"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "group_content--closed_group-group_membership": {
      "title": "group_content:closed_group-group_membership Schema",
      "description": "Describes the payload for 'group_content' entities of the 'closed_group-group_membership' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "group_content--closed_group-group_membership"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__id": {
                  "type": "integer",
                  "title": "ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language"
                },
                "label": {
                  "type": "string",
                  "title": "Title",
                  "maxLength": 255
                },
                "created": {
                  "type": "number",
                  "title": "Created on",
                  "format": "utc-millisec",
                  "description": "The time that the group content was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed on",
                  "format": "utc-millisec",
                  "description": "The time that the group content was last edited."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                }
              },
              "required": [
                "drupal_internal__id",
                "label",
                "path"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "group_content_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group_content_type--group_content_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group content type"
                },
                "gid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource"
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Parent group"
                },
                "entity_id": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Username"
                },
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group content creator"
                },
                "group_roles": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Referenced resource",
                            "enum": [
                              "group_role--group_role"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                          }
                        }
                      }
                    }
                  },
                  "title": "Roles"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "group_content--closed_group-group_node-event": {
      "title": "group_content:closed_group-group_node-event Schema",
      "description": "Describes the payload for 'group_content' entities of the 'closed_group-group_node-event' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "group_content--closed_group-group_node-event"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__id": {
                  "type": "integer",
                  "title": "ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language"
                },
                "label": {
                  "type": "string",
                  "title": "Title",
                  "maxLength": 255
                },
                "created": {
                  "type": "number",
                  "title": "Created on",
                  "format": "utc-millisec",
                  "description": "The time that the group content was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed on",
                  "format": "utc-millisec",
                  "description": "The time that the group content was last edited."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                }
              },
              "required": [
                "drupal_internal__id",
                "label",
                "path"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "group_content_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group_content_type--group_content_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group content type"
                },
                "gid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource"
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Parent group"
                },
                "entity_id": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "node--event"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Title"
                },
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group content creator"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "group_content--closed_group-group_node-topic": {
      "title": "group_content:closed_group-group_node-topic Schema",
      "description": "Describes the payload for 'group_content' entities of the 'closed_group-group_node-topic' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "group_content--closed_group-group_node-topic"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__id": {
                  "type": "integer",
                  "title": "ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language"
                },
                "label": {
                  "type": "string",
                  "title": "Title",
                  "maxLength": 255
                },
                "created": {
                  "type": "number",
                  "title": "Created on",
                  "format": "utc-millisec",
                  "description": "The time that the group content was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed on",
                  "format": "utc-millisec",
                  "description": "The time that the group content was last edited."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                }
              },
              "required": [
                "drupal_internal__id",
                "label",
                "path"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "group_content_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group_content_type--group_content_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group content type"
                },
                "gid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource"
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Parent group"
                },
                "entity_id": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "node--topic"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Title"
                },
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group content creator"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "group_content--open_group-group_membership": {
      "title": "group_content:open_group-group_membership Schema",
      "description": "Describes the payload for 'group_content' entities of the 'open_group-group_membership' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "group_content--open_group-group_membership"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__id": {
                  "type": "integer",
                  "title": "ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language"
                },
                "label": {
                  "type": "string",
                  "title": "Title",
                  "maxLength": 255
                },
                "created": {
                  "type": "number",
                  "title": "Created on",
                  "format": "utc-millisec",
                  "description": "The time that the group content was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed on",
                  "format": "utc-millisec",
                  "description": "The time that the group content was last edited."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                }
              },
              "required": [
                "drupal_internal__id",
                "label",
                "path"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "group_content_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group_content_type--group_content_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group content type"
                },
                "gid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource"
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Parent group"
                },
                "entity_id": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Username"
                },
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group content creator"
                },
                "group_roles": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Referenced resource",
                            "enum": [
                              "group_role--group_role"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                          }
                        }
                      }
                    }
                  },
                  "title": "Roles"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "group_content--open_group-group_node-event": {
      "title": "group_content:open_group-group_node-event Schema",
      "description": "Describes the payload for 'group_content' entities of the 'open_group-group_node-event' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "group_content--open_group-group_node-event"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__id": {
                  "type": "integer",
                  "title": "ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language"
                },
                "label": {
                  "type": "string",
                  "title": "Title",
                  "maxLength": 255
                },
                "created": {
                  "type": "number",
                  "title": "Created on",
                  "format": "utc-millisec",
                  "description": "The time that the group content was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed on",
                  "format": "utc-millisec",
                  "description": "The time that the group content was last edited."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                }
              },
              "required": [
                "drupal_internal__id",
                "label",
                "path"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "group_content_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group_content_type--group_content_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group content type"
                },
                "gid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource"
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Parent group"
                },
                "entity_id": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "node--event"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Title"
                },
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group content creator"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "group_content--open_group-group_node-topic": {
      "title": "group_content:open_group-group_node-topic Schema",
      "description": "Describes the payload for 'group_content' entities of the 'open_group-group_node-topic' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "group_content--open_group-group_node-topic"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__id": {
                  "type": "integer",
                  "title": "ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language"
                },
                "label": {
                  "type": "string",
                  "title": "Title",
                  "maxLength": 255
                },
                "created": {
                  "type": "number",
                  "title": "Created on",
                  "format": "utc-millisec",
                  "description": "The time that the group content was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed on",
                  "format": "utc-millisec",
                  "description": "The time that the group content was last edited."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                }
              },
              "required": [
                "drupal_internal__id",
                "label",
                "path"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "group_content_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group_content_type--group_content_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group content type"
                },
                "gid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource"
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Parent group"
                },
                "entity_id": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "node--topic"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Title"
                },
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group content creator"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "group_content--public_group-group_membership": {
      "title": "group_content:public_group-group_membership Schema",
      "description": "Describes the payload for 'group_content' entities of the 'public_group-group_membership' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "group_content--public_group-group_membership"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__id": {
                  "type": "integer",
                  "title": "ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language"
                },
                "label": {
                  "type": "string",
                  "title": "Title",
                  "maxLength": 255
                },
                "created": {
                  "type": "number",
                  "title": "Created on",
                  "format": "utc-millisec",
                  "description": "The time that the group content was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed on",
                  "format": "utc-millisec",
                  "description": "The time that the group content was last edited."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                }
              },
              "required": [
                "drupal_internal__id",
                "label",
                "path"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "group_content_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group_content_type--group_content_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group content type"
                },
                "gid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource"
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Parent group"
                },
                "entity_id": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Username"
                },
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group content creator"
                },
                "group_roles": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Referenced resource",
                            "enum": [
                              "group_role--group_role"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                          }
                        }
                      }
                    }
                  },
                  "title": "Roles"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "group_content--public_group-group_node-event": {
      "title": "group_content:public_group-group_node-event Schema",
      "description": "Describes the payload for 'group_content' entities of the 'public_group-group_node-event' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "group_content--public_group-group_node-event"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__id": {
                  "type": "integer",
                  "title": "ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language"
                },
                "label": {
                  "type": "string",
                  "title": "Title",
                  "maxLength": 255
                },
                "created": {
                  "type": "number",
                  "title": "Created on",
                  "format": "utc-millisec",
                  "description": "The time that the group content was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed on",
                  "format": "utc-millisec",
                  "description": "The time that the group content was last edited."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                }
              },
              "required": [
                "drupal_internal__id",
                "label",
                "path"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "group_content_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group_content_type--group_content_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group content type"
                },
                "gid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource"
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Parent group"
                },
                "entity_id": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "node--event"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Title"
                },
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group content creator"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "group_content--public_group-group_node-topic": {
      "title": "group_content:public_group-group_node-topic Schema",
      "description": "Describes the payload for 'group_content' entities of the 'public_group-group_node-topic' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "group_content--public_group-group_node-topic"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__id": {
                  "type": "integer",
                  "title": "ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language"
                },
                "label": {
                  "type": "string",
                  "title": "Title",
                  "maxLength": 255
                },
                "created": {
                  "type": "number",
                  "title": "Created on",
                  "format": "utc-millisec",
                  "description": "The time that the group content was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed on",
                  "format": "utc-millisec",
                  "description": "The time that the group content was last edited."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                }
              },
              "required": [
                "drupal_internal__id",
                "label",
                "path"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "group_content_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group_content_type--group_content_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group content type"
                },
                "gid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource"
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Parent group"
                },
                "entity_id": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "node--topic"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Title"
                },
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group content creator"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "node--event": {
      "title": "node:event Schema",
      "description": "Describes the payload for 'node' entities of the 'event' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "node--event"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__nid": {
                  "type": "integer",
                  "title": "ID"
                },
                "drupal_internal__vid": {
                  "type": "integer",
                  "title": "Revision ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language"
                },
                "revision_timestamp": {
                  "type": "number",
                  "title": "Revision create time",
                  "format": "utc-millisec",
                  "description": "The time that the current revision was created."
                },
                "revision_log": {
                  "type": "string",
                  "title": "Revision log message",
                  "description": "Briefly describe the changes you have made.",
                  "default": ""
                },
                "status": {
                  "type": "boolean",
                  "title": "Published",
                  "default": true
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "maxLength": 255
                },
                "created": {
                  "type": "number",
                  "title": "Authored on",
                  "format": "utc-millisec",
                  "description": "The time that the node was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed",
                  "format": "utc-millisec",
                  "description": "The time that the node was last edited."
                },
                "promote": {
                  "type": "boolean",
                  "title": "Promoted to front page",
                  "default": false
                },
                "sticky": {
                  "type": "boolean",
                  "title": "Sticky at top of lists",
                  "default": false
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                },
                "revision_default": {
                  "type": "boolean",
                  "title": "Default revision",
                  "description": "A flag indicating whether this was a default revision when it was saved."
                },
                "revision_translation_affected": {
                  "type": "boolean",
                  "title": "Revision translation affected",
                  "description": "Indicates if the last edit of a translation belongs to current revision."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                },
                "body": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Text"
                    },
                    "format": {
                      "type": "string",
                      "title": "Text format"
                    },
                    "summary": {
                      "type": "string",
                      "title": "Summary"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Body"
                },
                "field_content_visibility": {
                  "type": "string",
                  "title": "Visibility",
                  "enum": [
                    "public",
                    "community",
                    "group"
                  ]
                },
                "field_event_address": {
                  "type": "object",
                  "properties": {
                    "langcode": {
                      "type": "string",
                      "title": "The language code."
                    },
                    "country_code": {
                      "type": "string",
                      "title": "The two-letter country code."
                    },
                    "administrative_area": {
                      "type": "string",
                      "title": "The top-level administrative subdivision of the country."
                    },
                    "locality": {
                      "type": "string",
                      "title": "The locality (i.e. city)."
                    },
                    "dependent_locality": {
                      "type": "string",
                      "title": "The dependent locality (i.e. neighbourhood)."
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "The postal code."
                    },
                    "sorting_code": {
                      "type": "string",
                      "title": "The sorting code."
                    },
                    "address_line1": {
                      "type": "string",
                      "title": "The first line of the address block."
                    },
                    "address_line2": {
                      "type": "string",
                      "title": "The second line of the address block."
                    },
                    "organization": {
                      "type": "string",
                      "title": "The organization"
                    },
                    "given_name": {
                      "type": "string",
                      "title": "The given name."
                    },
                    "additional_name": {
                      "type": "string",
                      "title": "The additional name."
                    },
                    "family_name": {
                      "type": "string",
                      "title": "The family name."
                    }
                  },
                  "title": "Address"
                },
                "field_event_comments": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "title": "Comment status"
                    },
                    "cid": {
                      "type": "integer",
                      "title": "Last comment ID"
                    },
                    "last_comment_timestamp": {
                      "type": "integer",
                      "title": "Last comment timestamp",
                      "description": "The time that the last comment was created."
                    },
                    "last_comment_name": {
                      "type": "string",
                      "title": "Last comment name",
                      "description": "The name of the user posting the last comment."
                    },
                    "last_comment_uid": {
                      "type": "integer",
                      "title": "Last comment user ID"
                    },
                    "comment_count": {
                      "type": "integer",
                      "title": "Number of comments",
                      "description": "The number of comments."
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "title": "Comments",
                  "default": {
                    "status": 2,
                    "cid": 0,
                    "last_comment_timestamp": 0,
                    "last_comment_name": "",
                    "last_comment_uid": 0,
                    "comment_count": 0
                  }
                },
                "field_event_date": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Date value",
                      "format": "date"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Start"
                },
                "field_event_date_end": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Date value",
                      "format": "date"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "End"
                },
                "field_event_enroll": {
                  "type": "boolean",
                  "title": "Allow users to enroll in event",
                  "default": true
                },
                "field_event_location": {
                  "type": "string",
                  "title": "Location name",
                  "maxLength": 255
                }
              },
              "required": [
                "drupal_internal__nid",
                "drupal_internal__vid",
                "title",
                "revision_translation_affected",
                "path",
                "body",
                "field_content_visibility",
                "field_event_date"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "node_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "node_type--node_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Content type"
                },
                "revision_uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Revision user"
                },
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Authored by"
                },
                "groups": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource"
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group"
                },
                "groups_type_closed_group": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group--closed_group"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Get the related Closed group groups for this entity."
                },
                "groups_type_open_group": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group--open_group"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Get the related Open group groups for this entity."
                },
                "groups_type_public_group": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group--public_group"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Get the related Public group groups for this entity."
                },
                "social_tagging": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Referenced resource",
                            "enum": [
                              "taxonomy_term--social_tagging"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                          }
                        }
                      }
                    }
                  },
                  "title": "Tagging"
                },
                "menu_link": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "menu_link_content--menu_link_content"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Menu link"
                },
                "field_event_image": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "file--file"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Image"
                },
                "field_files": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Referenced resource",
                            "enum": [
                              "file--file"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                          }
                        }
                      }
                    }
                  },
                  "title": "Files"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "node--page": {
      "title": "node:page Schema",
      "description": "Use basic pages for your static content, such as an \\'About us\\' page.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "node--page"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__nid": {
                  "type": "integer",
                  "title": "ID"
                },
                "drupal_internal__vid": {
                  "type": "integer",
                  "title": "Revision ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language"
                },
                "revision_timestamp": {
                  "type": "number",
                  "title": "Revision create time",
                  "format": "utc-millisec",
                  "description": "The time that the current revision was created."
                },
                "revision_log": {
                  "type": "string",
                  "title": "Revision log message",
                  "description": "Briefly describe the changes you have made.",
                  "default": ""
                },
                "status": {
                  "type": "boolean",
                  "title": "Published",
                  "default": true
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "maxLength": 255
                },
                "created": {
                  "type": "number",
                  "title": "Authored on",
                  "format": "utc-millisec",
                  "description": "The time that the node was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed",
                  "format": "utc-millisec",
                  "description": "The time that the node was last edited."
                },
                "promote": {
                  "type": "boolean",
                  "title": "Promoted to front page",
                  "default": false
                },
                "sticky": {
                  "type": "boolean",
                  "title": "Sticky at top of lists",
                  "default": false
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                },
                "revision_default": {
                  "type": "boolean",
                  "title": "Default revision",
                  "description": "A flag indicating whether this was a default revision when it was saved."
                },
                "revision_translation_affected": {
                  "type": "boolean",
                  "title": "Revision translation affected",
                  "description": "Indicates if the last edit of a translation belongs to current revision."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                },
                "body": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Text"
                    },
                    "format": {
                      "type": "string",
                      "title": "Text format"
                    },
                    "summary": {
                      "type": "string",
                      "title": "Summary"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Description"
                },
                "field_content_visibility": {
                  "type": "string",
                  "title": "Visibility",
                  "enum": [
                    "public",
                    "community",
                    "group"
                  ]
                },
                "field_page_comments": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "title": "Comment status"
                    },
                    "cid": {
                      "type": "integer",
                      "title": "Last comment ID"
                    },
                    "last_comment_timestamp": {
                      "type": "integer",
                      "title": "Last comment timestamp",
                      "description": "The time that the last comment was created."
                    },
                    "last_comment_name": {
                      "type": "string",
                      "title": "Last comment name",
                      "description": "The name of the user posting the last comment."
                    },
                    "last_comment_uid": {
                      "type": "integer",
                      "title": "Last comment user ID"
                    },
                    "comment_count": {
                      "type": "integer",
                      "title": "Number of comments",
                      "description": "The number of comments."
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "title": "Comments",
                  "default": {
                    "status": 1,
                    "cid": 0,
                    "last_comment_timestamp": 0,
                    "last_comment_name": "",
                    "last_comment_uid": 0,
                    "comment_count": 0
                  }
                }
              },
              "required": [
                "drupal_internal__nid",
                "drupal_internal__vid",
                "title",
                "revision_translation_affected",
                "path",
                "body",
                "field_content_visibility"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "node_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "node_type--node_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Content type"
                },
                "revision_uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Revision user"
                },
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Authored by"
                },
                "groups": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource"
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group"
                },
                "groups_type_closed_group": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group--closed_group"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Get the related Closed group groups for this entity."
                },
                "groups_type_open_group": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group--open_group"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Get the related Open group groups for this entity."
                },
                "groups_type_public_group": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group--public_group"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Get the related Public group groups for this entity."
                },
                "social_tagging": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Referenced resource",
                            "enum": [
                              "taxonomy_term--social_tagging"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                          }
                        }
                      }
                    }
                  },
                  "title": "Tagging"
                },
                "menu_link": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "menu_link_content--menu_link_content"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Menu link"
                },
                "field_files": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Referenced resource",
                            "enum": [
                              "file--file"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                          }
                        }
                      }
                    }
                  },
                  "title": "Files"
                },
                "field_page_image": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "file--file"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Image"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "node--topic": {
      "title": "node:topic Schema",
      "description": "Describes the payload for 'node' entities of the 'topic' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "node--topic"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__nid": {
                  "type": "integer",
                  "title": "ID"
                },
                "drupal_internal__vid": {
                  "type": "integer",
                  "title": "Revision ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language"
                },
                "revision_timestamp": {
                  "type": "number",
                  "title": "Revision create time",
                  "format": "utc-millisec",
                  "description": "The time that the current revision was created."
                },
                "revision_log": {
                  "type": "string",
                  "title": "Revision log message",
                  "description": "Briefly describe the changes you have made.",
                  "default": ""
                },
                "status": {
                  "type": "boolean",
                  "title": "Published",
                  "default": true
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "maxLength": 255
                },
                "created": {
                  "type": "number",
                  "title": "Authored on",
                  "format": "utc-millisec",
                  "description": "The time that the node was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed",
                  "format": "utc-millisec",
                  "description": "The time that the node was last edited."
                },
                "promote": {
                  "type": "boolean",
                  "title": "Promoted to front page",
                  "default": false
                },
                "sticky": {
                  "type": "boolean",
                  "title": "Sticky at top of lists",
                  "default": false
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                },
                "revision_default": {
                  "type": "boolean",
                  "title": "Default revision",
                  "description": "A flag indicating whether this was a default revision when it was saved."
                },
                "revision_translation_affected": {
                  "type": "boolean",
                  "title": "Revision translation affected",
                  "description": "Indicates if the last edit of a translation belongs to current revision."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                },
                "body": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Text"
                    },
                    "format": {
                      "type": "string",
                      "title": "Text format"
                    },
                    "summary": {
                      "type": "string",
                      "title": "Summary"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Description"
                },
                "field_content_visibility": {
                  "type": "string",
                  "title": "Visibility",
                  "enum": [
                    "public",
                    "community",
                    "group"
                  ]
                },
                "field_topic_comments": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "title": "Comment status"
                    },
                    "cid": {
                      "type": "integer",
                      "title": "Last comment ID"
                    },
                    "last_comment_timestamp": {
                      "type": "integer",
                      "title": "Last comment timestamp",
                      "description": "The time that the last comment was created."
                    },
                    "last_comment_name": {
                      "type": "string",
                      "title": "Last comment name",
                      "description": "The name of the user posting the last comment."
                    },
                    "last_comment_uid": {
                      "type": "integer",
                      "title": "Last comment user ID"
                    },
                    "comment_count": {
                      "type": "integer",
                      "title": "Number of comments",
                      "description": "The number of comments."
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "title": "Comments",
                  "default": {
                    "status": 2,
                    "cid": 0,
                    "last_comment_timestamp": 0,
                    "last_comment_name": "",
                    "last_comment_uid": 0,
                    "comment_count": 0
                  }
                }
              },
              "required": [
                "drupal_internal__nid",
                "drupal_internal__vid",
                "title",
                "revision_translation_affected",
                "path",
                "body",
                "field_content_visibility"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "node_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "node_type--node_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Content type"
                },
                "revision_uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Revision user"
                },
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Authored by"
                },
                "groups": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource"
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Group"
                },
                "groups_type_closed_group": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group--closed_group"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Get the related Closed group groups for this entity."
                },
                "groups_type_open_group": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group--open_group"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Get the related Open group groups for this entity."
                },
                "groups_type_public_group": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group--public_group"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Get the related Public group groups for this entity."
                },
                "social_tagging": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Referenced resource",
                            "enum": [
                              "taxonomy_term--social_tagging"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                          }
                        }
                      }
                    }
                  },
                  "title": "Tagging"
                },
                "menu_link": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "menu_link_content--menu_link_content"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Menu link"
                },
                "field_files": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Referenced resource",
                            "enum": [
                              "file--file"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                          }
                        }
                      }
                    }
                  },
                  "title": "Files"
                },
                "field_topic_image": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "file--file"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Image"
                },
                "field_topic_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "taxonomy_term--topic_types"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Type"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "profile--profile": {
      "title": "profile Schema",
      "description": "Describes the payload for 'profile' entities.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "profile--profile"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__profile_id": {
                  "type": "integer",
                  "title": "ID"
                },
                "drupal_internal__revision_id": {
                  "type": "integer",
                  "title": "Revision ID"
                },
                "revision_created": {
                  "type": "number",
                  "title": "Revision create time",
                  "format": "utc-millisec",
                  "description": "The time that the current revision was created."
                },
                "revision_log_message": {
                  "type": "string",
                  "title": "Revision log message",
                  "description": "Briefly describe the changes you have made.",
                  "default": ""
                },
                "status": {
                  "type": "boolean",
                  "title": "Active",
                  "description": "Whether the profile is active.",
                  "default": true
                },
                "is_default": {
                  "type": "boolean",
                  "title": "Default",
                  "description": "Whether this is the default profile."
                },
                "data": {
                  "type": "object",
                  "title": "Data",
                  "description": "A serialized array of additional data."
                },
                "created": {
                  "type": "number",
                  "title": "Created",
                  "format": "utc-millisec",
                  "description": "The time when the profile was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed",
                  "format": "utc-millisec",
                  "description": "The time when the profile was last edited."
                },
                "revision_default": {
                  "type": "boolean",
                  "title": "Default revision",
                  "description": "A flag indicating whether this was a default revision when it was saved."
                }
              },
              "required": [
                "drupal_internal__profile_id",
                "drupal_internal__revision_id"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "profile_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "profile_type--profile_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Profile"
                },
                "revision_user": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Revision user"
                },
                "uid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Owner"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "event_enrollment--event_enrollment": {
      "title": "event_enrollment Schema",
      "description": "Describes the payload for 'event_enrollment' entities.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "event_enrollment--event_enrollment"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__id": {
                  "type": "integer",
                  "title": "ID",
                  "description": "The ID of the Event enrollment entity."
                },
                "name": {
                  "type": "string",
                  "title": "Name",
                  "maxLength": 50,
                  "description": "The name of the Event enrollment entity.",
                  "default": ""
                },
                "status": {
                  "type": "boolean",
                  "title": "Publishing status",
                  "description": "A boolean indicating whether the Event enrollment is published.",
                  "default": true
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language code",
                  "description": "The language code for the Event enrollment entity."
                },
                "created": {
                  "type": "number",
                  "title": "Created",
                  "format": "utc-millisec",
                  "description": "The time that the entity was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed",
                  "format": "utc-millisec",
                  "description": "The time that the entity was last edited."
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                }
              },
              "required": [
                "drupal_internal__id"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "user_id": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Authored by"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "post--photo": {
      "title": "post:photo Schema",
      "description": "Describes the payload for 'post' entities of the 'photo' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "post--photo"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__id": {
                  "type": "integer",
                  "title": "ID",
                  "description": "The ID of the Post entity."
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language code",
                  "description": "The language code for the Post entity."
                },
                "status": {
                  "type": "boolean",
                  "title": "Published",
                  "default": true
                },
                "created": {
                  "type": "number",
                  "title": "Created",
                  "format": "utc-millisec",
                  "description": "The time that the entity was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed",
                  "format": "utc-millisec",
                  "description": "The time that the entity was last edited."
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                },
                "field_post": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Text"
                    },
                    "format": {
                      "type": "string",
                      "title": "Text format"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Post"
                },
                "field_post_comments": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "title": "Comment status"
                    },
                    "cid": {
                      "type": "integer",
                      "title": "Last comment ID"
                    },
                    "last_comment_timestamp": {
                      "type": "integer",
                      "title": "Last comment timestamp",
                      "description": "The time that the last comment was created."
                    },
                    "last_comment_name": {
                      "type": "string",
                      "title": "Last comment name",
                      "description": "The name of the user posting the last comment."
                    },
                    "last_comment_uid": {
                      "type": "integer",
                      "title": "Last comment user ID"
                    },
                    "comment_count": {
                      "type": "integer",
                      "title": "Number of comments",
                      "description": "The number of comments."
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "title": "Post comments",
                  "default": {
                    "status": 2,
                    "cid": 0,
                    "last_comment_timestamp": 0,
                    "last_comment_name": "",
                    "last_comment_uid": 0,
                    "comment_count": 0
                  }
                },
                "field_visibility": {
                  "type": "string",
                  "title": "Visibility",
                  "enum": [
                    0,
                    1,
                    2,
                    3
                  ]
                }
              },
              "required": [
                "drupal_internal__id",
                "field_post",
                "field_visibility"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "post_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "post_type--post_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Post type"
                },
                "user_id": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Authored by"
                },
                "field_post_image": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "file--file"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Image"
                },
                "field_recipient_group": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource"
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Recipient (group)"
                },
                "field_recipient_user": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Recipient (user)"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "post--post": {
      "title": "post Schema",
      "description": "Describes the payload for 'post' entities.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "post--post"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__id": {
                  "type": "integer",
                  "title": "ID",
                  "description": "The ID of the Post entity."
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language code",
                  "description": "The language code for the Post entity."
                },
                "status": {
                  "type": "boolean",
                  "title": "Published",
                  "default": true
                },
                "created": {
                  "type": "number",
                  "title": "Created",
                  "format": "utc-millisec",
                  "description": "The time that the entity was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed",
                  "format": "utc-millisec",
                  "description": "The time that the entity was last edited."
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                }
              },
              "required": [
                "drupal_internal__id"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "post_type": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "post_type--post_type"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Post type"
                },
                "user_id": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Authored by"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "taxonomy_term--expertise": {
      "title": "taxonomy_term:expertise Schema",
      "description": "Describes the payload for 'taxonomy_term' entities of the 'expertise' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "taxonomy_term--expertise"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__tid": {
                  "type": "integer",
                  "title": "Term ID",
                  "description": "The term ID."
                },
                "drupal_internal__revision_id": {
                  "type": "integer",
                  "title": "Revision ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language",
                  "description": "The term language code."
                },
                "revision_created": {
                  "type": "number",
                  "title": "Revision create time",
                  "format": "utc-millisec",
                  "description": "The time that the current revision was created."
                },
                "revision_log_message": {
                  "type": "string",
                  "title": "Revision log message",
                  "description": "Briefly describe the changes you have made.",
                  "default": ""
                },
                "status": {
                  "type": "boolean",
                  "title": "Published",
                  "default": true
                },
                "name": {
                  "type": "string",
                  "title": "Name",
                  "maxLength": 255
                },
                "description": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Text"
                    },
                    "format": {
                      "type": "string",
                      "title": "Text format"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Description"
                },
                "weight": {
                  "type": "integer",
                  "title": "Weight",
                  "description": "The weight of this term in relation to other terms.",
                  "default": 0
                },
                "changed": {
                  "type": "number",
                  "title": "Changed",
                  "format": "utc-millisec",
                  "description": "The time that the term was last edited."
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                },
                "revision_default": {
                  "type": "boolean",
                  "title": "Default revision",
                  "description": "A flag indicating whether this was a default revision when it was saved."
                },
                "revision_translation_affected": {
                  "type": "boolean",
                  "title": "Revision translation affected",
                  "description": "Indicates if the last edit of a translation belongs to current revision."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                }
              },
              "required": [
                "drupal_internal__tid",
                "drupal_internal__revision_id",
                "name",
                "revision_translation_affected",
                "path"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "vid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "taxonomy_vocabulary--taxonomy_vocabulary"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Vocabulary"
                },
                "revision_user": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Revision user"
                },
                "parent": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Referenced resource",
                            "enum": [
                              "taxonomy_term--expertise"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                          }
                        }
                      }
                    }
                  },
                  "title": "Term Parents"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "taxonomy_term--interests": {
      "title": "taxonomy_term:interests Schema",
      "description": "Describes the payload for 'taxonomy_term' entities of the 'interests' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "taxonomy_term--interests"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__tid": {
                  "type": "integer",
                  "title": "Term ID",
                  "description": "The term ID."
                },
                "drupal_internal__revision_id": {
                  "type": "integer",
                  "title": "Revision ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language",
                  "description": "The term language code."
                },
                "revision_created": {
                  "type": "number",
                  "title": "Revision create time",
                  "format": "utc-millisec",
                  "description": "The time that the current revision was created."
                },
                "revision_log_message": {
                  "type": "string",
                  "title": "Revision log message",
                  "description": "Briefly describe the changes you have made.",
                  "default": ""
                },
                "status": {
                  "type": "boolean",
                  "title": "Published",
                  "default": true
                },
                "name": {
                  "type": "string",
                  "title": "Name",
                  "maxLength": 255
                },
                "description": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Text"
                    },
                    "format": {
                      "type": "string",
                      "title": "Text format"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Description"
                },
                "weight": {
                  "type": "integer",
                  "title": "Weight",
                  "description": "The weight of this term in relation to other terms.",
                  "default": 0
                },
                "changed": {
                  "type": "number",
                  "title": "Changed",
                  "format": "utc-millisec",
                  "description": "The time that the term was last edited."
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                },
                "revision_default": {
                  "type": "boolean",
                  "title": "Default revision",
                  "description": "A flag indicating whether this was a default revision when it was saved."
                },
                "revision_translation_affected": {
                  "type": "boolean",
                  "title": "Revision translation affected",
                  "description": "Indicates if the last edit of a translation belongs to current revision."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                }
              },
              "required": [
                "drupal_internal__tid",
                "drupal_internal__revision_id",
                "name",
                "revision_translation_affected",
                "path"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "vid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "taxonomy_vocabulary--taxonomy_vocabulary"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Vocabulary"
                },
                "revision_user": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Revision user"
                },
                "parent": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Referenced resource",
                            "enum": [
                              "taxonomy_term--interests"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                          }
                        }
                      }
                    }
                  },
                  "title": "Term Parents"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "taxonomy_term--profile_tag": {
      "title": "taxonomy_term:profile_tag Schema",
      "description": "Describes the payload for 'taxonomy_term' entities of the 'profile_tag' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "taxonomy_term--profile_tag"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__tid": {
                  "type": "integer",
                  "title": "Term ID",
                  "description": "The term ID."
                },
                "drupal_internal__revision_id": {
                  "type": "integer",
                  "title": "Revision ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language",
                  "description": "The term language code."
                },
                "revision_created": {
                  "type": "number",
                  "title": "Revision create time",
                  "format": "utc-millisec",
                  "description": "The time that the current revision was created."
                },
                "revision_log_message": {
                  "type": "string",
                  "title": "Revision log message",
                  "description": "Briefly describe the changes you have made.",
                  "default": ""
                },
                "status": {
                  "type": "boolean",
                  "title": "Published",
                  "default": true
                },
                "name": {
                  "type": "string",
                  "title": "Name",
                  "maxLength": 255
                },
                "description": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Text"
                    },
                    "format": {
                      "type": "string",
                      "title": "Text format"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Description"
                },
                "weight": {
                  "type": "integer",
                  "title": "Weight",
                  "description": "The weight of this term in relation to other terms.",
                  "default": 0
                },
                "changed": {
                  "type": "number",
                  "title": "Changed",
                  "format": "utc-millisec",
                  "description": "The time that the term was last edited."
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                },
                "revision_default": {
                  "type": "boolean",
                  "title": "Default revision",
                  "description": "A flag indicating whether this was a default revision when it was saved."
                },
                "revision_translation_affected": {
                  "type": "boolean",
                  "title": "Revision translation affected",
                  "description": "Indicates if the last edit of a translation belongs to current revision."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                }
              },
              "required": [
                "drupal_internal__tid",
                "drupal_internal__revision_id",
                "name",
                "revision_translation_affected",
                "path"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "vid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "taxonomy_vocabulary--taxonomy_vocabulary"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Vocabulary"
                },
                "revision_user": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Revision user"
                },
                "parent": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Referenced resource",
                            "enum": [
                              "taxonomy_term--profile_tag"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                          }
                        }
                      }
                    }
                  },
                  "title": "Term Parents"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "taxonomy_term--social_tagging": {
      "title": "taxonomy_term:social_tagging Schema",
      "description": "Describes the payload for 'taxonomy_term' entities of the 'social_tagging' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "taxonomy_term--social_tagging"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__tid": {
                  "type": "integer",
                  "title": "Term ID",
                  "description": "The term ID."
                },
                "drupal_internal__revision_id": {
                  "type": "integer",
                  "title": "Revision ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language",
                  "description": "The term language code."
                },
                "revision_created": {
                  "type": "number",
                  "title": "Revision create time",
                  "format": "utc-millisec",
                  "description": "The time that the current revision was created."
                },
                "revision_log_message": {
                  "type": "string",
                  "title": "Revision log message",
                  "description": "Briefly describe the changes you have made.",
                  "default": ""
                },
                "status": {
                  "type": "boolean",
                  "title": "Published",
                  "default": true
                },
                "name": {
                  "type": "string",
                  "title": "Name",
                  "maxLength": 255
                },
                "description": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Text"
                    },
                    "format": {
                      "type": "string",
                      "title": "Text format"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Description"
                },
                "weight": {
                  "type": "integer",
                  "title": "Weight",
                  "description": "The weight of this term in relation to other terms.",
                  "default": 0
                },
                "changed": {
                  "type": "number",
                  "title": "Changed",
                  "format": "utc-millisec",
                  "description": "The time that the term was last edited."
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                },
                "revision_default": {
                  "type": "boolean",
                  "title": "Default revision",
                  "description": "A flag indicating whether this was a default revision when it was saved."
                },
                "revision_translation_affected": {
                  "type": "boolean",
                  "title": "Revision translation affected",
                  "description": "Indicates if the last edit of a translation belongs to current revision."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                }
              },
              "required": [
                "drupal_internal__tid",
                "drupal_internal__revision_id",
                "name",
                "revision_translation_affected",
                "path"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "vid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "taxonomy_vocabulary--taxonomy_vocabulary"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Vocabulary"
                },
                "revision_user": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Revision user"
                },
                "parent": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Referenced resource",
                            "enum": [
                              "taxonomy_term--social_tagging"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                          }
                        }
                      }
                    }
                  },
                  "title": "Term Parents"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "taxonomy_term--topic_types": {
      "title": "taxonomy_term:topic_types Schema",
      "description": "Describes the payload for 'taxonomy_term' entities of the 'topic_types' bundle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "taxonomy_term--topic_types"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__tid": {
                  "type": "integer",
                  "title": "Term ID",
                  "description": "The term ID."
                },
                "drupal_internal__revision_id": {
                  "type": "integer",
                  "title": "Revision ID"
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language",
                  "description": "The term language code."
                },
                "revision_created": {
                  "type": "number",
                  "title": "Revision create time",
                  "format": "utc-millisec",
                  "description": "The time that the current revision was created."
                },
                "revision_log_message": {
                  "type": "string",
                  "title": "Revision log message",
                  "description": "Briefly describe the changes you have made.",
                  "default": ""
                },
                "status": {
                  "type": "boolean",
                  "title": "Published",
                  "default": true
                },
                "name": {
                  "type": "string",
                  "title": "Name",
                  "maxLength": 255
                },
                "description": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Text"
                    },
                    "format": {
                      "type": "string",
                      "title": "Text format"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Description"
                },
                "weight": {
                  "type": "integer",
                  "title": "Weight",
                  "description": "The weight of this term in relation to other terms.",
                  "default": 0
                },
                "changed": {
                  "type": "number",
                  "title": "Changed",
                  "format": "utc-millisec",
                  "description": "The time that the term was last edited."
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                },
                "revision_default": {
                  "type": "boolean",
                  "title": "Default revision",
                  "description": "A flag indicating whether this was a default revision when it was saved."
                },
                "revision_translation_affected": {
                  "type": "boolean",
                  "title": "Revision translation affected",
                  "description": "Indicates if the last edit of a translation belongs to current revision."
                },
                "path": {
                  "type": "object",
                  "properties": {
                    "alias": {
                      "type": "string",
                      "title": "Path alias"
                    },
                    "pid": {
                      "type": "integer",
                      "title": "Path id"
                    },
                    "langcode": {
                      "type": "string",
                      "title": "Language Code"
                    }
                  },
                  "title": "URL alias"
                }
              },
              "required": [
                "drupal_internal__tid",
                "drupal_internal__revision_id",
                "name",
                "revision_translation_affected",
                "path"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "vid": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "taxonomy_vocabulary--taxonomy_vocabulary"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Vocabulary"
                },
                "revision_user": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "user--user"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Revision user"
                },
                "parent": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Referenced resource",
                            "enum": [
                              "taxonomy_term--topic_types"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                          }
                        }
                      }
                    }
                  },
                  "title": "Term Parents"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "user--user": {
      "title": "user Schema",
      "description": "Describes the payload for 'user' entities.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "title": "type",
              "description": "Resource type",
              "enum": [
                "user--user"
              ]
            },
            "id": {
              "type": "string",
              "title": "Resource ID",
              "format": "uuid",
              "maxLength": 128
            },
            "attributes": {
              "description": "Entity attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "drupal_internal__uid": {
                  "type": "integer",
                  "title": "User ID",
                  "description": "The user ID."
                },
                "langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Language code",
                  "description": "The user language code."
                },
                "preferred_langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Preferred language code",
                  "description": "The user\\'s preferred language code for receiving emails and viewing the site."
                },
                "preferred_admin_langcode": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Language code"
                    },
                    "language": {
                      "type": "language_reference",
                      "title": "Language object",
                      "description": "The referenced language"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "title": "Preferred admin language code",
                  "description": "The user\\'s preferred language code for viewing administration pages.",
                  "default": ""
                },
                "name": {
                  "type": "string",
                  "title": "Name",
                  "maxLength": 255,
                  "description": "The name of this user."
                },
                "pass": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "The hashed password",
                      "maxLength": 255
                    },
                    "existing": {
                      "type": "string",
                      "title": "Existing password"
                    },
                    "pre_hashed": {
                      "type": "boolean",
                      "title": "Determines if a password needs hashing"
                    }
                  },
                  "title": "Password",
                  "description": "The password of this user (hashed)."
                },
                "mail": {
                  "type": "string",
                  "title": "Email",
                  "format": "email",
                  "description": "The email of this user.",
                  "default": ""
                },
                "timezone": {
                  "type": "string",
                  "title": "Timezone",
                  "maxLength": 32,
                  "description": "The timezone of this user."
                },
                "status": {
                  "type": "boolean",
                  "title": "User status",
                  "description": "Whether the user is active or blocked.",
                  "default": false
                },
                "created": {
                  "type": "number",
                  "title": "Created",
                  "format": "utc-millisec",
                  "description": "The time that the user was created."
                },
                "changed": {
                  "type": "number",
                  "title": "Changed",
                  "format": "utc-millisec",
                  "description": "The time that the user was last edited."
                },
                "access": {
                  "type": "number",
                  "title": "Last access",
                  "format": "utc-millisec",
                  "description": "The time that the user last accessed the site.",
                  "default": 0
                },
                "login": {
                  "type": "number",
                  "title": "Last login",
                  "format": "utc-millisec",
                  "description": "The time that the user last logged in.",
                  "default": 0
                },
                "init": {
                  "type": "string",
                  "title": "Initial email",
                  "format": "email",
                  "description": "The email address used for initial account creation.",
                  "default": ""
                },
                "default_langcode": {
                  "type": "boolean",
                  "title": "Default translation",
                  "description": "A flag indicating whether this is the default translation.",
                  "default": true
                }
              },
              "required": [
                "drupal_internal__uid",
                "name"
              ]
            },
            "relationships": {
              "description": "Entity relationships",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "roles": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Referenced resource",
                            "enum": [
                              "user_role--user_role"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "title": "Resource ID",
                            "format": "uuid",
                            "maxLength": 128
                          }
                        }
                      }
                    }
                  },
                  "title": "Roles"
                },
                "groups": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource"
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Get the related groups for this entity."
                },
                "groups_type_closed_group": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group--closed_group"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Get the related Closed group groups for this entity."
                },
                "groups_type_open_group": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group--open_group"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Get the related Open group groups for this entity."
                },
                "groups_type_public_group": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "group--public_group"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Get the related Public group groups for this entity."
                },
                "profile_profiles": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "Referenced resource",
                          "enum": [
                            "profile--profile"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "title": "Resource ID",
                          "format": "uuid",
                          "maxLength": 128
                        }
                      }
                    }
                  },
                  "title": "Profile profiles"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": [
                  "href"
                ],
                "properties": {
                  "href": {
                    "description": "A string containing the link's URL . ",
                    "type": "string",
                    "format": "uri - reference"
                  },
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "type": "object",
          "additionalProperties": true
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "A string containing the link's URL . ",
                "type": "string",
                "format": "uri - reference"
              },
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "type": "object",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    }
  },
  "consumes": [
    "application/vnd.api+json"
  ],
  "produces": [
    "application/vnd.api+json"
  ],
  "paths": {
    "/comment/comment": {
      "get": {
        "summary": "List (Comment - Comment)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the comment--comment resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "comment Schema",
              "description": "Describes the payload for 'comment' entities.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/comment--comment/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Comment - Comment)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">comment</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/comment--comment"
            }
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": []
      }
    },
    "/comment/comment/{entity}/relationships/comment_type": {
      "delete": {
        "summary": "Relationship: comment_type (Comment type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: comment_type (Comment type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the comment_type--comment_type resource type through the <em class=\"placeholder\">comment_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment_type--comment_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: comment_type (Comment type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment_type--comment_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment_type--comment_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: comment_type (Comment type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment_type--comment_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment_type--comment_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/comment/comment/{entity}/entity_id": {
      "get": {
        "summary": "Related: entity_id (Content - Event)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the node--event resource type through the <em class=\"placeholder\">entity_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/node--event"
            }
          }
        }
      }
    },
    "/comment/comment/{entity}/relationships/entity_id": {
      "delete": {
        "summary": "Relationship: entity_id (Content - Event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: entity_id (Content - Event)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the node--event resource type through the <em class=\"placeholder\">entity_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: entity_id (Content - Event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: entity_id (Content - Event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/comment/comment/{entity}/field_comment_files": {
      "get": {
        "summary": "Related: field_comment_files (File)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_comment_files</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "file Schema",
              "description": "Describes the payload for 'file' entities.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/file--file/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/comment/comment/{entity}/relationships/field_comment_files": {
      "delete": {
        "summary": "Relationship: field_comment_files (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_comment_files (File)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_comment_files</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_comment_files (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_comment_files (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/comment/comment/{entity}/{file_field_name}": {
      "post": {
        "summary": "File_upload POST",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">comment</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/comment--comment"
            }
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "201": {
            "description": "Entity created",
            "schema": {
              "$ref": "#/definitions/comment--comment"
            }
          }
        }
      }
    },
    "/comment/comment/{file_field_name}": {
      "post": {
        "summary": "File_upload POST",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">comment</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/comment--comment"
            }
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "201": {
            "description": "Entity created",
            "schema": {
              "$ref": "#/definitions/comment--comment"
            }
          }
        }
      }
    },
    "/comment/comment/{entity}": {
      "get": {
        "summary": "View (Comment - Comment)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the comment--comment resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/comment--comment"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Comment - Comment)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Comment - Comment)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">comment</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/comment--comment"
            }
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": []
      }
    },
    "/comment/comment/{entity}/pid": {
      "get": {
        "summary": "Related: pid (Comment - Comment)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the comment--comment resource type through the <em class=\"placeholder\">pid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/comment--comment"
            }
          }
        }
      }
    },
    "/comment/comment/{entity}/relationships/pid": {
      "delete": {
        "summary": "Relationship: pid (Comment - Comment)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: pid (Comment - Comment)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the comment--comment resource type through the <em class=\"placeholder\">pid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment--comment"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: pid (Comment - Comment)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment--comment"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment--comment"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: pid (Comment - Comment)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment--comment"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment--comment"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/comment/comment/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/comment/comment/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Comment - Comment"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/comment/post_comment": {
      "get": {
        "summary": "List (Comment - Post comment)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the comment--post_comment resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "comment:post_comment Schema",
              "description": "Describes the payload for 'comment' entities of the 'post_comment' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/comment--post_comment/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Comment - Post comment)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">comment</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/comment--post_comment"
            }
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": []
      }
    },
    "/comment/post_comment/{entity}/relationships/comment_type": {
      "delete": {
        "summary": "Relationship: comment_type (Comment type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: comment_type (Comment type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the comment_type--comment_type resource type through the <em class=\"placeholder\">comment_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment_type--comment_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: comment_type (Comment type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment_type--comment_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment_type--comment_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: comment_type (Comment type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment_type--comment_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment_type--comment_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/comment/post_comment/{entity}/entity_id": {
      "get": {
        "summary": "Related: entity_id (Post - Photo)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the post--photo resource type through the <em class=\"placeholder\">entity_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/post--photo"
            }
          }
        }
      }
    },
    "/comment/post_comment/{entity}/relationships/entity_id": {
      "delete": {
        "summary": "Relationship: entity_id (Post - Photo)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: entity_id (Post - Photo)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the post--photo resource type through the <em class=\"placeholder\">entity_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "post--photo"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: entity_id (Post - Photo)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "post--photo"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "post--photo"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: entity_id (Post - Photo)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "post--photo"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "post--photo"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/comment/post_comment/{entity}": {
      "get": {
        "summary": "View (Comment - Post comment)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the comment--post_comment resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/comment--post_comment"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Comment - Post comment)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Comment - Post comment)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">comment</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/comment--post_comment"
            }
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": []
      }
    },
    "/comment/post_comment/{entity}/pid": {
      "get": {
        "summary": "Related: pid (Comment - Comment)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the comment--comment resource type through the <em class=\"placeholder\">pid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/comment--comment"
            }
          }
        }
      }
    },
    "/comment/post_comment/{entity}/relationships/pid": {
      "delete": {
        "summary": "Relationship: pid (Comment - Comment)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: pid (Comment - Comment)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the comment--comment resource type through the <em class=\"placeholder\">pid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment--comment"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: pid (Comment - Comment)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment--comment"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment--comment"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: pid (Comment - Comment)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment--comment"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "comment--comment"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/comment/post_comment/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/comment/post_comment/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the comment post_comment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Comment - Post comment"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/event_enrollment/event_enrollment": {
      "get": {
        "summary": "List (Event enrollment)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the event_enrollment--event_enrollment resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "event_enrollment Schema",
              "description": "Describes the payload for 'event_enrollment' entities.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/event_enrollment--event_enrollment/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Event enrollment)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">event_enrollment</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/event_enrollment--event_enrollment"
            }
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": []
      }
    },
    "/event_enrollment/event_enrollment/{entity}/field_account": {
      "get": {
        "summary": "Related: field_account (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">field_account</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the event_enrollment event_enrollment"
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/event_enrollment/event_enrollment/{entity}/relationships/field_account": {
      "delete": {
        "summary": "Relationship: field_account (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the event_enrollment event_enrollment"
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_account (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">field_account</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the event_enrollment event_enrollment"
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_account (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the event_enrollment event_enrollment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_account (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the event_enrollment event_enrollment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/event_enrollment/event_enrollment/{entity}/field_event": {
      "get": {
        "summary": "Related: field_event (Content - Event)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the node--event resource type through the <em class=\"placeholder\">field_event</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the event_enrollment event_enrollment"
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/node--event"
            }
          }
        }
      }
    },
    "/event_enrollment/event_enrollment/{entity}/relationships/field_event": {
      "delete": {
        "summary": "Relationship: field_event (Content - Event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the event_enrollment event_enrollment"
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_event (Content - Event)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the node--event resource type through the <em class=\"placeholder\">field_event</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the event_enrollment event_enrollment"
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_event (Content - Event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the event_enrollment event_enrollment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_event (Content - Event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the event_enrollment event_enrollment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/event_enrollment/event_enrollment/{entity}": {
      "get": {
        "summary": "View (Event enrollment)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the event_enrollment--event_enrollment resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the event_enrollment event_enrollment"
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/event_enrollment--event_enrollment"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Event enrollment)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the event_enrollment event_enrollment"
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Event enrollment)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the event_enrollment event_enrollment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">event_enrollment</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/event_enrollment--event_enrollment"
            }
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": []
      }
    },
    "/event_enrollment/event_enrollment/{entity}/user_id": {
      "get": {
        "summary": "Related: user_id (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">user_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the event_enrollment event_enrollment"
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/event_enrollment/event_enrollment/{entity}/relationships/user_id": {
      "delete": {
        "summary": "Relationship: user_id (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the event_enrollment event_enrollment"
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: user_id (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">user_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the event_enrollment event_enrollment"
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: user_id (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the event_enrollment event_enrollment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: user_id (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the event_enrollment event_enrollment"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Event enrollment"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/file/file": {
      "get": {
        "summary": "List (File)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the file--file resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "File"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "file Schema",
              "description": "Describes the payload for 'file' entities.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/file--file/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (File)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">file</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/file--file"
            }
          }
        ],
        "tags": [
          "File"
        ],
        "responses": []
      }
    },
    "/file/file/{entity}": {
      "get": {
        "summary": "View (File)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the file--file resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the file file"
          }
        ],
        "tags": [
          "File"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/file--file"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the file file"
          }
        ],
        "tags": [
          "File"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the file file"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">file</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/file--file"
            }
          }
        ],
        "tags": [
          "File"
        ],
        "responses": []
      }
    },
    "/file/file/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the file file"
          }
        ],
        "tags": [
          "File"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/file/file/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the file file"
          }
        ],
        "tags": [
          "File"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the file file"
          }
        ],
        "tags": [
          "File"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the file file"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "File"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the file file"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "File"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group/closed_group": {
      "get": {
        "summary": "List (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the group--closed_group resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "group:closed_group Schema",
              "description": "Describes the payload for 'group' entities of the 'closed_group' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/group--closed_group/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": []
      }
    },
    "/group/closed_group/{entity}/field_group_image": {
      "get": {
        "summary": "Related: field_group_image (File)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_group_image</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/file--file"
            }
          }
        }
      }
    },
    "/group/closed_group/{entity}/relationships/field_group_image": {
      "delete": {
        "summary": "Relationship: field_group_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_group_image (File)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_group_image</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_group_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_group_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group/closed_group/{entity}/{file_field_name}": {
      "post": {
        "summary": "File_upload POST",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "201": {
            "description": "Entity created",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/group/closed_group/{file_field_name}": {
      "post": {
        "summary": "File_upload POST",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "201": {
            "description": "Entity created",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/group/closed_group/{entity}/relationships/group_type": {
      "delete": {
        "summary": "Relationship: group_type (Group type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: group_type (Group type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_type--group_type resource type through the <em class=\"placeholder\">group_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_type--group_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: group_type (Group type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_type--group_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_type--group_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: group_type (Group type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_type--group_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_type--group_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group/closed_group/{entity}": {
      "get": {
        "summary": "View (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the group--closed_group resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": []
      }
    },
    "/group/closed_group/{entity}/social_tagging": {
      "get": {
        "summary": "Related: social_tagging (Taxonomy term - Content tags)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the taxonomy_term--social_tagging resource type through the <em class=\"placeholder\">social_tagging</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:social_tagging Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'social_tagging' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--social_tagging/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/group/closed_group/{entity}/relationships/social_tagging": {
      "delete": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_term--social_tagging resource type through the <em class=\"placeholder\">social_tagging</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/group/closed_group/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/group/closed_group/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group closed_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Closed group"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group/open_group": {
      "get": {
        "summary": "List (Group - Open group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the group--open_group resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "group:open_group Schema",
              "description": "Describes the payload for 'group' entities of the 'open_group' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/group--open_group/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Group - Open group)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group--open_group"
            }
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": []
      }
    },
    "/group/open_group/{entity}/field_group_image": {
      "get": {
        "summary": "Related: field_group_image (File)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_group_image</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/file--file"
            }
          }
        }
      }
    },
    "/group/open_group/{entity}/relationships/field_group_image": {
      "delete": {
        "summary": "Relationship: field_group_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_group_image (File)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_group_image</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_group_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_group_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group/open_group/{entity}/{file_field_name}": {
      "post": {
        "summary": "File_upload POST",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group--open_group"
            }
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "201": {
            "description": "Entity created",
            "schema": {
              "$ref": "#/definitions/group--open_group"
            }
          }
        }
      }
    },
    "/group/open_group/{file_field_name}": {
      "post": {
        "summary": "File_upload POST",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group--open_group"
            }
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "201": {
            "description": "Entity created",
            "schema": {
              "$ref": "#/definitions/group--open_group"
            }
          }
        }
      }
    },
    "/group/open_group/{entity}/relationships/group_type": {
      "delete": {
        "summary": "Relationship: group_type (Group type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: group_type (Group type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_type--group_type resource type through the <em class=\"placeholder\">group_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_type--group_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: group_type (Group type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_type--group_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_type--group_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: group_type (Group type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_type--group_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_type--group_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group/open_group/{entity}": {
      "get": {
        "summary": "View (Group - Open group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the group--open_group resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--open_group"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Group - Open group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Group - Open group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group--open_group"
            }
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": []
      }
    },
    "/group/open_group/{entity}/social_tagging": {
      "get": {
        "summary": "Related: social_tagging (Taxonomy term - Content tags)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the taxonomy_term--social_tagging resource type through the <em class=\"placeholder\">social_tagging</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:social_tagging Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'social_tagging' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--social_tagging/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/group/open_group/{entity}/relationships/social_tagging": {
      "delete": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_term--social_tagging resource type through the <em class=\"placeholder\">social_tagging</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/group/open_group/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/group/open_group/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group open_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Open group"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group/public_group": {
      "get": {
        "summary": "List (Group - Public group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the group--public_group resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "group:public_group Schema",
              "description": "Describes the payload for 'group' entities of the 'public_group' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/group--public_group/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Group - Public group)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group--public_group"
            }
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": []
      }
    },
    "/group/public_group/{entity}/field_group_image": {
      "get": {
        "summary": "Related: field_group_image (File)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_group_image</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/file--file"
            }
          }
        }
      }
    },
    "/group/public_group/{entity}/relationships/field_group_image": {
      "delete": {
        "summary": "Relationship: field_group_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_group_image (File)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_group_image</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_group_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_group_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group/public_group/{entity}/{file_field_name}": {
      "post": {
        "summary": "File_upload POST",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group--public_group"
            }
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "201": {
            "description": "Entity created",
            "schema": {
              "$ref": "#/definitions/group--public_group"
            }
          }
        }
      }
    },
    "/group/public_group/{file_field_name}": {
      "post": {
        "summary": "File_upload POST",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group--public_group"
            }
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "201": {
            "description": "Entity created",
            "schema": {
              "$ref": "#/definitions/group--public_group"
            }
          }
        }
      }
    },
    "/group/public_group/{entity}/relationships/group_type": {
      "delete": {
        "summary": "Relationship: group_type (Group type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: group_type (Group type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_type--group_type resource type through the <em class=\"placeholder\">group_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_type--group_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: group_type (Group type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_type--group_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_type--group_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: group_type (Group type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_type--group_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_type--group_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group/public_group/{entity}": {
      "get": {
        "summary": "View (Group - Public group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the group--public_group resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--public_group"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Group - Public group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Group - Public group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group--public_group"
            }
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": []
      }
    },
    "/group/public_group/{entity}/social_tagging": {
      "get": {
        "summary": "Related: social_tagging (Taxonomy term - Content tags)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the taxonomy_term--social_tagging resource type through the <em class=\"placeholder\">social_tagging</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:social_tagging Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'social_tagging' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--social_tagging/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/group/public_group/{entity}/relationships/social_tagging": {
      "delete": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_term--social_tagging resource type through the <em class=\"placeholder\">social_tagging</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/group/public_group/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/group/public_group/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group public_group"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group - Public group"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_membership": {
      "get": {
        "summary": "List (Group content - Closed group: Group membership)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the group_content--closed_group-group_membership resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "group_content:closed_group-group_membership Schema",
              "description": "Describes the payload for 'group_content' entities of the 'closed_group-group_membership' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/group_content--closed_group-group_membership/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Group content - Closed group: Group membership)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group_content</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_content--closed_group-group_membership"
            }
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": []
      }
    },
    "/group_content/closed_group-group_membership/{entity}/entity_id": {
      "get": {
        "summary": "Related: entity_id (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">entity_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_membership/{entity}/relationships/entity_id": {
      "delete": {
        "summary": "Relationship: entity_id (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: entity_id (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">entity_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: entity_id (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: entity_id (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_membership/{entity}/gid": {
      "get": {
        "summary": "Related: gid (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">gid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_membership/{entity}/relationships/gid": {
      "delete": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">gid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_membership/{entity}/relationships/group_content_type": {
      "delete": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_content_type--group_content_type resource type through the <em class=\"placeholder\">group_content_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_membership/{entity}/relationships/group_roles": {
      "delete": {
        "summary": "Relationship: group_roles (Group role)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: group_roles (Group role)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_role--group_role resource type through the <em class=\"placeholder\">group_roles</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "group_role--group_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: group_roles (Group role)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "group_role--group_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "group_role--group_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: group_roles (Group role)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "group_role--group_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "group_role--group_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_membership/{entity}": {
      "get": {
        "summary": "View (Group content - Closed group: Group membership)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the group_content--closed_group-group_membership resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group_content--closed_group-group_membership"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Group content - Closed group: Group membership)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Group content - Closed group: Group membership)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group_content</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_content--closed_group-group_membership"
            }
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": []
      }
    },
    "/group_content/closed_group-group_membership/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_membership/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Closed group: Group membership"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_node-event": {
      "get": {
        "summary": "List (Group content - event)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the group_content--closed_group-group_node-event resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "group_content:closed_group-group_node-event Schema",
              "description": "Describes the payload for 'group_content' entities of the 'closed_group-group_node-event' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/group_content--closed_group-group_node-event/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Group content - event)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group_content</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_content--closed_group-group_node-event"
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": []
      }
    },
    "/group_content/closed_group-group_node-event/{entity}/entity_id": {
      "get": {
        "summary": "Related: entity_id (Content - Event)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the node--event resource type through the <em class=\"placeholder\">entity_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/node--event"
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_node-event/{entity}/relationships/entity_id": {
      "delete": {
        "summary": "Relationship: entity_id (Content - Event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: entity_id (Content - Event)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the node--event resource type through the <em class=\"placeholder\">entity_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: entity_id (Content - Event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: entity_id (Content - Event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_node-event/{entity}/gid": {
      "get": {
        "summary": "Related: gid (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">gid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_node-event/{entity}/relationships/gid": {
      "delete": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">gid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_node-event/{entity}/relationships/group_content_type": {
      "delete": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_content_type--group_content_type resource type through the <em class=\"placeholder\">group_content_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_node-event/{entity}": {
      "get": {
        "summary": "View (Group content - event)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the group_content--closed_group-group_node-event resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group_content--closed_group-group_node-event"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Group content - event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Group content - event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group_content</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_content--closed_group-group_node-event"
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": []
      }
    },
    "/group_content/closed_group-group_node-event/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_node-event/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_node-topic": {
      "get": {
        "summary": "List (Group content - topic)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the group_content--closed_group-group_node-topic resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "group_content:closed_group-group_node-topic Schema",
              "description": "Describes the payload for 'group_content' entities of the 'closed_group-group_node-topic' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/group_content--closed_group-group_node-topic/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Group content - topic)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group_content</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_content--closed_group-group_node-topic"
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": []
      }
    },
    "/group_content/closed_group-group_node-topic/{entity}/entity_id": {
      "get": {
        "summary": "Related: entity_id (Content - Topic)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the node--topic resource type through the <em class=\"placeholder\">entity_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/node--topic"
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_node-topic/{entity}/relationships/entity_id": {
      "delete": {
        "summary": "Relationship: entity_id (Content - Topic)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: entity_id (Content - Topic)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the node--topic resource type through the <em class=\"placeholder\">entity_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--topic"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: entity_id (Content - Topic)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--topic"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--topic"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: entity_id (Content - Topic)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--topic"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--topic"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_node-topic/{entity}/gid": {
      "get": {
        "summary": "Related: gid (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">gid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_node-topic/{entity}/relationships/gid": {
      "delete": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">gid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_node-topic/{entity}/relationships/group_content_type": {
      "delete": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_content_type--group_content_type resource type through the <em class=\"placeholder\">group_content_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_node-topic/{entity}": {
      "get": {
        "summary": "View (Group content - topic)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the group_content--closed_group-group_node-topic resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group_content--closed_group-group_node-topic"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Group content - topic)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Group content - topic)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group_content</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_content--closed_group-group_node-topic"
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": []
      }
    },
    "/group_content/closed_group-group_node-topic/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/group_content/closed_group-group_node-topic/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content closed_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/open_group-group_membership": {
      "get": {
        "summary": "List (Group content - Open group: Group membership)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the group_content--open_group-group_membership resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "group_content:open_group-group_membership Schema",
              "description": "Describes the payload for 'group_content' entities of the 'open_group-group_membership' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/group_content--open_group-group_membership/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Group content - Open group: Group membership)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group_content</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_content--open_group-group_membership"
            }
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": []
      }
    },
    "/group_content/open_group-group_membership/{entity}/entity_id": {
      "get": {
        "summary": "Related: entity_id (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">entity_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/group_content/open_group-group_membership/{entity}/relationships/entity_id": {
      "delete": {
        "summary": "Relationship: entity_id (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: entity_id (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">entity_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: entity_id (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: entity_id (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/open_group-group_membership/{entity}/gid": {
      "get": {
        "summary": "Related: gid (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">gid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/group_content/open_group-group_membership/{entity}/relationships/gid": {
      "delete": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">gid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/open_group-group_membership/{entity}/relationships/group_content_type": {
      "delete": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_content_type--group_content_type resource type through the <em class=\"placeholder\">group_content_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/open_group-group_membership/{entity}/relationships/group_roles": {
      "delete": {
        "summary": "Relationship: group_roles (Group role)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: group_roles (Group role)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_role--group_role resource type through the <em class=\"placeholder\">group_roles</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "group_role--group_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: group_roles (Group role)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "group_role--group_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "group_role--group_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: group_roles (Group role)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "group_role--group_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "group_role--group_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/group_content/open_group-group_membership/{entity}": {
      "get": {
        "summary": "View (Group content - Open group: Group membership)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the group_content--open_group-group_membership resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group_content--open_group-group_membership"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Group content - Open group: Group membership)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Group content - Open group: Group membership)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group_content</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_content--open_group-group_membership"
            }
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": []
      }
    },
    "/group_content/open_group-group_membership/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/group_content/open_group-group_membership/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Open group: Group membership"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/open_group-group_node-event": {
      "get": {
        "summary": "List (Group content - event)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the group_content--open_group-group_node-event resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "group_content:open_group-group_node-event Schema",
              "description": "Describes the payload for 'group_content' entities of the 'open_group-group_node-event' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/group_content--open_group-group_node-event/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Group content - event)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group_content</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_content--open_group-group_node-event"
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": []
      }
    },
    "/group_content/open_group-group_node-event/{entity}/entity_id": {
      "get": {
        "summary": "Related: entity_id (Content - Event)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the node--event resource type through the <em class=\"placeholder\">entity_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/node--event"
            }
          }
        }
      }
    },
    "/group_content/open_group-group_node-event/{entity}/relationships/entity_id": {
      "delete": {
        "summary": "Relationship: entity_id (Content - Event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: entity_id (Content - Event)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the node--event resource type through the <em class=\"placeholder\">entity_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: entity_id (Content - Event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: entity_id (Content - Event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/open_group-group_node-event/{entity}/gid": {
      "get": {
        "summary": "Related: gid (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">gid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/group_content/open_group-group_node-event/{entity}/relationships/gid": {
      "delete": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">gid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/open_group-group_node-event/{entity}/relationships/group_content_type": {
      "delete": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_content_type--group_content_type resource type through the <em class=\"placeholder\">group_content_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/open_group-group_node-event/{entity}": {
      "get": {
        "summary": "View (Group content - event)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the group_content--open_group-group_node-event resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group_content--open_group-group_node-event"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Group content - event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Group content - event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group_content</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_content--open_group-group_node-event"
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": []
      }
    },
    "/group_content/open_group-group_node-event/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/group_content/open_group-group_node-event/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/open_group-group_node-topic": {
      "get": {
        "summary": "List (Group content - topic)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the group_content--open_group-group_node-topic resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "group_content:open_group-group_node-topic Schema",
              "description": "Describes the payload for 'group_content' entities of the 'open_group-group_node-topic' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/group_content--open_group-group_node-topic/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Group content - topic)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group_content</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_content--open_group-group_node-topic"
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": []
      }
    },
    "/group_content/open_group-group_node-topic/{entity}/entity_id": {
      "get": {
        "summary": "Related: entity_id (Content - Topic)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the node--topic resource type through the <em class=\"placeholder\">entity_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/node--topic"
            }
          }
        }
      }
    },
    "/group_content/open_group-group_node-topic/{entity}/relationships/entity_id": {
      "delete": {
        "summary": "Relationship: entity_id (Content - Topic)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: entity_id (Content - Topic)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the node--topic resource type through the <em class=\"placeholder\">entity_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--topic"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: entity_id (Content - Topic)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--topic"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--topic"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: entity_id (Content - Topic)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--topic"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--topic"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/open_group-group_node-topic/{entity}/gid": {
      "get": {
        "summary": "Related: gid (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">gid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/group_content/open_group-group_node-topic/{entity}/relationships/gid": {
      "delete": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">gid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/open_group-group_node-topic/{entity}/relationships/group_content_type": {
      "delete": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_content_type--group_content_type resource type through the <em class=\"placeholder\">group_content_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/open_group-group_node-topic/{entity}": {
      "get": {
        "summary": "View (Group content - topic)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the group_content--open_group-group_node-topic resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group_content--open_group-group_node-topic"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Group content - topic)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Group content - topic)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group_content</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_content--open_group-group_node-topic"
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": []
      }
    },
    "/group_content/open_group-group_node-topic/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/group_content/open_group-group_node-topic/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content open_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/public_group-group_membership": {
      "get": {
        "summary": "List (Group content - Public group: Group membership)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the group_content--public_group-group_membership resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "group_content:public_group-group_membership Schema",
              "description": "Describes the payload for 'group_content' entities of the 'public_group-group_membership' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/group_content--public_group-group_membership/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Group content - Public group: Group membership)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group_content</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_content--public_group-group_membership"
            }
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": []
      }
    },
    "/group_content/public_group-group_membership/{entity}/entity_id": {
      "get": {
        "summary": "Related: entity_id (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">entity_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/group_content/public_group-group_membership/{entity}/relationships/entity_id": {
      "delete": {
        "summary": "Relationship: entity_id (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: entity_id (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">entity_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: entity_id (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: entity_id (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/public_group-group_membership/{entity}/gid": {
      "get": {
        "summary": "Related: gid (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">gid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/group_content/public_group-group_membership/{entity}/relationships/gid": {
      "delete": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">gid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/public_group-group_membership/{entity}/relationships/group_content_type": {
      "delete": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_content_type--group_content_type resource type through the <em class=\"placeholder\">group_content_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/public_group-group_membership/{entity}/relationships/group_roles": {
      "delete": {
        "summary": "Relationship: group_roles (Group role)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: group_roles (Group role)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_role--group_role resource type through the <em class=\"placeholder\">group_roles</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "group_role--group_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: group_roles (Group role)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "group_role--group_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "group_role--group_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: group_roles (Group role)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "group_role--group_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "group_role--group_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/group_content/public_group-group_membership/{entity}": {
      "get": {
        "summary": "View (Group content - Public group: Group membership)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the group_content--public_group-group_membership resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group_content--public_group-group_membership"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Group content - Public group: Group membership)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Group content - Public group: Group membership)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group_content</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_content--public_group-group_membership"
            }
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": []
      }
    },
    "/group_content/public_group-group_membership/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/group_content/public_group-group_membership/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_membership"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - Public group: Group membership"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/public_group-group_node-event": {
      "get": {
        "summary": "List (Group content - event)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the group_content--public_group-group_node-event resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "group_content:public_group-group_node-event Schema",
              "description": "Describes the payload for 'group_content' entities of the 'public_group-group_node-event' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/group_content--public_group-group_node-event/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Group content - event)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group_content</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_content--public_group-group_node-event"
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": []
      }
    },
    "/group_content/public_group-group_node-event/{entity}/entity_id": {
      "get": {
        "summary": "Related: entity_id (Content - Event)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the node--event resource type through the <em class=\"placeholder\">entity_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/node--event"
            }
          }
        }
      }
    },
    "/group_content/public_group-group_node-event/{entity}/relationships/entity_id": {
      "delete": {
        "summary": "Relationship: entity_id (Content - Event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: entity_id (Content - Event)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the node--event resource type through the <em class=\"placeholder\">entity_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: entity_id (Content - Event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: entity_id (Content - Event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--event"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/public_group-group_node-event/{entity}/gid": {
      "get": {
        "summary": "Related: gid (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">gid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/group_content/public_group-group_node-event/{entity}/relationships/gid": {
      "delete": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">gid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/public_group-group_node-event/{entity}/relationships/group_content_type": {
      "delete": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_content_type--group_content_type resource type through the <em class=\"placeholder\">group_content_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/public_group-group_node-event/{entity}": {
      "get": {
        "summary": "View (Group content - event)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the group_content--public_group-group_node-event resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group_content--public_group-group_node-event"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Group content - event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Group content - event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group_content</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_content--public_group-group_node-event"
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": []
      }
    },
    "/group_content/public_group-group_node-event/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/group_content/public_group-group_node-event/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/public_group-group_node-topic": {
      "get": {
        "summary": "List (Group content - topic)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the group_content--public_group-group_node-topic resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "group_content:public_group-group_node-topic Schema",
              "description": "Describes the payload for 'group_content' entities of the 'public_group-group_node-topic' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/group_content--public_group-group_node-topic/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Group content - topic)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group_content</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_content--public_group-group_node-topic"
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": []
      }
    },
    "/group_content/public_group-group_node-topic/{entity}/entity_id": {
      "get": {
        "summary": "Related: entity_id (Content - Topic)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the node--topic resource type through the <em class=\"placeholder\">entity_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/node--topic"
            }
          }
        }
      }
    },
    "/group_content/public_group-group_node-topic/{entity}/relationships/entity_id": {
      "delete": {
        "summary": "Relationship: entity_id (Content - Topic)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: entity_id (Content - Topic)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the node--topic resource type through the <em class=\"placeholder\">entity_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--topic"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: entity_id (Content - Topic)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--topic"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--topic"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: entity_id (Content - Topic)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--topic"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node--topic"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/public_group-group_node-topic/{entity}/gid": {
      "get": {
        "summary": "Related: gid (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">gid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/group_content/public_group-group_node-topic/{entity}/relationships/gid": {
      "delete": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">gid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: gid (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/public_group-group_node-topic/{entity}/relationships/group_content_type": {
      "delete": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group_content_type--group_content_type resource type through the <em class=\"placeholder\">group_content_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: group_content_type (Group content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group_content_type--group_content_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/group_content/public_group-group_node-topic/{entity}": {
      "get": {
        "summary": "View (Group content - topic)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the group_content--public_group-group_node-topic resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group_content--public_group-group_node-topic"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Group content - topic)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Group content - topic)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">group_content</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/group_content--public_group-group_node-topic"
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": []
      }
    },
    "/group_content/public_group-group_node-topic/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/group_content/public_group-group_node-topic/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the group_content public_group-group_node-topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Group content - topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/event": {
      "get": {
        "summary": "List (Content - Event)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the node--event resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "node:event Schema",
              "description": "Describes the payload for 'node' entities of the 'event' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/node--event/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Content - Event)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">node</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/node--event"
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": []
      }
    },
    "/node/event/{entity}/field_event_image": {
      "get": {
        "summary": "Related: field_event_image (File)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_event_image</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/file--file"
            }
          }
        }
      }
    },
    "/node/event/{entity}/relationships/field_event_image": {
      "delete": {
        "summary": "Relationship: field_event_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_event_image (File)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_event_image</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_event_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_event_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/event/{entity}/field_files": {
      "get": {
        "summary": "Related: field_files (File)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_files</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "file Schema",
              "description": "Describes the payload for 'file' entities.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/file--file/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/node/event/{entity}/relationships/field_files": {
      "delete": {
        "summary": "Relationship: field_files (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_files (File)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_files</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_files (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_files (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/node/event/{entity}/{file_field_name}": {
      "post": {
        "summary": "File_upload POST",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">node</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/node--event"
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "201": {
            "description": "Entity created",
            "schema": {
              "$ref": "#/definitions/node--event"
            }
          }
        }
      }
    },
    "/node/event/{file_field_name}": {
      "post": {
        "summary": "File_upload POST",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">node</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/node--event"
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "201": {
            "description": "Entity created",
            "schema": {
              "$ref": "#/definitions/node--event"
            }
          }
        }
      }
    },
    "/node/event/{entity}/groups": {
      "get": {
        "summary": "Related: groups (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">groups</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/node/event/{entity}/relationships/groups": {
      "delete": {
        "summary": "Relationship: groups (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: groups (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">groups</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: groups (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: groups (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/event/{entity}/groups_type_closed_group": {
      "get": {
        "summary": "Related: groups_type_closed_group (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">groups_type_closed_group</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/node/event/{entity}/relationships/groups_type_closed_group": {
      "delete": {
        "summary": "Relationship: groups_type_closed_group (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: groups_type_closed_group (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">groups_type_closed_group</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: groups_type_closed_group (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: groups_type_closed_group (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/event/{entity}/groups_type_open_group": {
      "get": {
        "summary": "Related: groups_type_open_group (Group - Open group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--open_group resource type through the <em class=\"placeholder\">groups_type_open_group</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--open_group"
            }
          }
        }
      }
    },
    "/node/event/{entity}/relationships/groups_type_open_group": {
      "delete": {
        "summary": "Relationship: groups_type_open_group (Group - Open group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: groups_type_open_group (Group - Open group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--open_group resource type through the <em class=\"placeholder\">groups_type_open_group</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: groups_type_open_group (Group - Open group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: groups_type_open_group (Group - Open group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/event/{entity}/groups_type_public_group": {
      "get": {
        "summary": "Related: groups_type_public_group (Group - Public group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--public_group resource type through the <em class=\"placeholder\">groups_type_public_group</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--public_group"
            }
          }
        }
      }
    },
    "/node/event/{entity}/relationships/groups_type_public_group": {
      "delete": {
        "summary": "Relationship: groups_type_public_group (Group - Public group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: groups_type_public_group (Group - Public group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--public_group resource type through the <em class=\"placeholder\">groups_type_public_group</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: groups_type_public_group (Group - Public group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: groups_type_public_group (Group - Public group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/event/{entity}": {
      "get": {
        "summary": "View (Content - Event)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the node--event resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/node--event"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Content - Event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Content - Event)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">node</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/node--event"
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": []
      }
    },
    "/node/event/{entity}/relationships/menu_link": {
      "delete": {
        "summary": "Relationship: menu_link (Custom menu link)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: menu_link (Custom menu link)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the menu_link_content--menu_link_content resource type through the <em class=\"placeholder\">menu_link</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "menu_link_content--menu_link_content"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: menu_link (Custom menu link)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "menu_link_content--menu_link_content"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "menu_link_content--menu_link_content"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: menu_link (Custom menu link)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "menu_link_content--menu_link_content"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "menu_link_content--menu_link_content"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/event/{entity}/relationships/node_type": {
      "delete": {
        "summary": "Relationship: node_type (Content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: node_type (Content type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the node_type--node_type resource type through the <em class=\"placeholder\">node_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node_type--node_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: node_type (Content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node_type--node_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node_type--node_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: node_type (Content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node_type--node_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node_type--node_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/event/{entity}/revision_uid": {
      "get": {
        "summary": "Related: revision_uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/node/event/{entity}/relationships/revision_uid": {
      "delete": {
        "summary": "Relationship: revision_uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: revision_uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: revision_uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: revision_uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/event/{entity}/social_tagging": {
      "get": {
        "summary": "Related: social_tagging (Taxonomy term - Content tags)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the taxonomy_term--social_tagging resource type through the <em class=\"placeholder\">social_tagging</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:social_tagging Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'social_tagging' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--social_tagging/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/node/event/{entity}/relationships/social_tagging": {
      "delete": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_term--social_tagging resource type through the <em class=\"placeholder\">social_tagging</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/node/event/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/node/event/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node event"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Event"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/page": {
      "get": {
        "summary": "List (Content - Basic page)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the node--page resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "node:page Schema",
              "description": "Use basic pages for your static content, such as an \\'About us\\' page.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/node--page/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Content - Basic page)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">node</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/node--page"
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": []
      }
    },
    "/node/page/{entity}/field_files": {
      "get": {
        "summary": "Related: field_files (File)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_files</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "file Schema",
              "description": "Describes the payload for 'file' entities.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/file--file/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/node/page/{entity}/relationships/field_files": {
      "delete": {
        "summary": "Relationship: field_files (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_files (File)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_files</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_files (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_files (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/node/page/{entity}/field_page_image": {
      "get": {
        "summary": "Related: field_page_image (File)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_page_image</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/file--file"
            }
          }
        }
      }
    },
    "/node/page/{entity}/relationships/field_page_image": {
      "delete": {
        "summary": "Relationship: field_page_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_page_image (File)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_page_image</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_page_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_page_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/page/{entity}/{file_field_name}": {
      "post": {
        "summary": "File_upload POST",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">node</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/node--page"
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "201": {
            "description": "Entity created",
            "schema": {
              "$ref": "#/definitions/node--page"
            }
          }
        }
      }
    },
    "/node/page/{file_field_name}": {
      "post": {
        "summary": "File_upload POST",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">node</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/node--page"
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "201": {
            "description": "Entity created",
            "schema": {
              "$ref": "#/definitions/node--page"
            }
          }
        }
      }
    },
    "/node/page/{entity}/groups": {
      "get": {
        "summary": "Related: groups (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">groups</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/node/page/{entity}/relationships/groups": {
      "delete": {
        "summary": "Relationship: groups (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: groups (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">groups</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: groups (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: groups (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/page/{entity}/groups_type_closed_group": {
      "get": {
        "summary": "Related: groups_type_closed_group (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">groups_type_closed_group</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/node/page/{entity}/relationships/groups_type_closed_group": {
      "delete": {
        "summary": "Relationship: groups_type_closed_group (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: groups_type_closed_group (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">groups_type_closed_group</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: groups_type_closed_group (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: groups_type_closed_group (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/page/{entity}/groups_type_open_group": {
      "get": {
        "summary": "Related: groups_type_open_group (Group - Open group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--open_group resource type through the <em class=\"placeholder\">groups_type_open_group</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--open_group"
            }
          }
        }
      }
    },
    "/node/page/{entity}/relationships/groups_type_open_group": {
      "delete": {
        "summary": "Relationship: groups_type_open_group (Group - Open group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: groups_type_open_group (Group - Open group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--open_group resource type through the <em class=\"placeholder\">groups_type_open_group</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: groups_type_open_group (Group - Open group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: groups_type_open_group (Group - Open group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/page/{entity}/groups_type_public_group": {
      "get": {
        "summary": "Related: groups_type_public_group (Group - Public group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--public_group resource type through the <em class=\"placeholder\">groups_type_public_group</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--public_group"
            }
          }
        }
      }
    },
    "/node/page/{entity}/relationships/groups_type_public_group": {
      "delete": {
        "summary": "Relationship: groups_type_public_group (Group - Public group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: groups_type_public_group (Group - Public group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--public_group resource type through the <em class=\"placeholder\">groups_type_public_group</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: groups_type_public_group (Group - Public group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: groups_type_public_group (Group - Public group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/page/{entity}": {
      "get": {
        "summary": "View (Content - Basic page)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the node--page resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/node--page"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Content - Basic page)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Content - Basic page)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">node</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/node--page"
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": []
      }
    },
    "/node/page/{entity}/relationships/menu_link": {
      "delete": {
        "summary": "Relationship: menu_link (Custom menu link)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: menu_link (Custom menu link)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the menu_link_content--menu_link_content resource type through the <em class=\"placeholder\">menu_link</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "menu_link_content--menu_link_content"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: menu_link (Custom menu link)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "menu_link_content--menu_link_content"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "menu_link_content--menu_link_content"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: menu_link (Custom menu link)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "menu_link_content--menu_link_content"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "menu_link_content--menu_link_content"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/page/{entity}/relationships/node_type": {
      "delete": {
        "summary": "Relationship: node_type (Content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: node_type (Content type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the node_type--node_type resource type through the <em class=\"placeholder\">node_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node_type--node_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: node_type (Content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node_type--node_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node_type--node_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: node_type (Content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node_type--node_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node_type--node_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/page/{entity}/revision_uid": {
      "get": {
        "summary": "Related: revision_uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/node/page/{entity}/relationships/revision_uid": {
      "delete": {
        "summary": "Relationship: revision_uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: revision_uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: revision_uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: revision_uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/page/{entity}/social_tagging": {
      "get": {
        "summary": "Related: social_tagging (Taxonomy term - Content tags)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the taxonomy_term--social_tagging resource type through the <em class=\"placeholder\">social_tagging</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:social_tagging Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'social_tagging' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--social_tagging/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/node/page/{entity}/relationships/social_tagging": {
      "delete": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_term--social_tagging resource type through the <em class=\"placeholder\">social_tagging</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/node/page/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/node/page/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node page"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Basic page"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/topic": {
      "get": {
        "summary": "List (Content - Topic)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the node--topic resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "node:topic Schema",
              "description": "Describes the payload for 'node' entities of the 'topic' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/node--topic/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Content - Topic)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">node</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/node--topic"
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": []
      }
    },
    "/node/topic/{entity}/field_files": {
      "get": {
        "summary": "Related: field_files (File)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_files</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "file Schema",
              "description": "Describes the payload for 'file' entities.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/file--file/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/node/topic/{entity}/relationships/field_files": {
      "delete": {
        "summary": "Relationship: field_files (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_files (File)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_files</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_files (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_files (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "file--file"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/node/topic/{entity}/field_topic_image": {
      "get": {
        "summary": "Related: field_topic_image (File)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_topic_image</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/file--file"
            }
          }
        }
      }
    },
    "/node/topic/{entity}/relationships/field_topic_image": {
      "delete": {
        "summary": "Relationship: field_topic_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_topic_image (File)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_topic_image</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_topic_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_topic_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/topic/{entity}/field_topic_type": {
      "get": {
        "summary": "Related: field_topic_type (Taxonomy term - Topic types)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the taxonomy_term--topic_types resource type through the <em class=\"placeholder\">field_topic_type</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/taxonomy_term--topic_types"
            }
          }
        }
      }
    },
    "/node/topic/{entity}/relationships/field_topic_type": {
      "delete": {
        "summary": "Relationship: field_topic_type (Taxonomy term - Topic types)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_topic_type (Taxonomy term - Topic types)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_term--topic_types resource type through the <em class=\"placeholder\">field_topic_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_term--topic_types"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_topic_type (Taxonomy term - Topic types)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_term--topic_types"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_term--topic_types"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_topic_type (Taxonomy term - Topic types)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_term--topic_types"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_term--topic_types"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/topic/{entity}/{file_field_name}": {
      "post": {
        "summary": "File_upload POST",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">node</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/node--topic"
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "201": {
            "description": "Entity created",
            "schema": {
              "$ref": "#/definitions/node--topic"
            }
          }
        }
      }
    },
    "/node/topic/{file_field_name}": {
      "post": {
        "summary": "File_upload POST",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">node</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/node--topic"
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "201": {
            "description": "Entity created",
            "schema": {
              "$ref": "#/definitions/node--topic"
            }
          }
        }
      }
    },
    "/node/topic/{entity}/groups": {
      "get": {
        "summary": "Related: groups (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">groups</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/node/topic/{entity}/relationships/groups": {
      "delete": {
        "summary": "Relationship: groups (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: groups (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">groups</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: groups (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: groups (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/topic/{entity}/groups_type_closed_group": {
      "get": {
        "summary": "Related: groups_type_closed_group (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">groups_type_closed_group</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/node/topic/{entity}/relationships/groups_type_closed_group": {
      "delete": {
        "summary": "Relationship: groups_type_closed_group (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: groups_type_closed_group (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">groups_type_closed_group</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: groups_type_closed_group (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: groups_type_closed_group (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/topic/{entity}/groups_type_open_group": {
      "get": {
        "summary": "Related: groups_type_open_group (Group - Open group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--open_group resource type through the <em class=\"placeholder\">groups_type_open_group</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--open_group"
            }
          }
        }
      }
    },
    "/node/topic/{entity}/relationships/groups_type_open_group": {
      "delete": {
        "summary": "Relationship: groups_type_open_group (Group - Open group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: groups_type_open_group (Group - Open group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--open_group resource type through the <em class=\"placeholder\">groups_type_open_group</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: groups_type_open_group (Group - Open group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: groups_type_open_group (Group - Open group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/topic/{entity}/groups_type_public_group": {
      "get": {
        "summary": "Related: groups_type_public_group (Group - Public group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--public_group resource type through the <em class=\"placeholder\">groups_type_public_group</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--public_group"
            }
          }
        }
      }
    },
    "/node/topic/{entity}/relationships/groups_type_public_group": {
      "delete": {
        "summary": "Relationship: groups_type_public_group (Group - Public group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: groups_type_public_group (Group - Public group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--public_group resource type through the <em class=\"placeholder\">groups_type_public_group</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: groups_type_public_group (Group - Public group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: groups_type_public_group (Group - Public group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/topic/{entity}": {
      "get": {
        "summary": "View (Content - Topic)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the node--topic resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/node--topic"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Content - Topic)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Content - Topic)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">node</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/node--topic"
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": []
      }
    },
    "/node/topic/{entity}/relationships/menu_link": {
      "delete": {
        "summary": "Relationship: menu_link (Custom menu link)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: menu_link (Custom menu link)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the menu_link_content--menu_link_content resource type through the <em class=\"placeholder\">menu_link</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "menu_link_content--menu_link_content"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: menu_link (Custom menu link)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "menu_link_content--menu_link_content"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "menu_link_content--menu_link_content"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: menu_link (Custom menu link)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "menu_link_content--menu_link_content"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "menu_link_content--menu_link_content"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/topic/{entity}/relationships/node_type": {
      "delete": {
        "summary": "Relationship: node_type (Content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: node_type (Content type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the node_type--node_type resource type through the <em class=\"placeholder\">node_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node_type--node_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: node_type (Content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node_type--node_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node_type--node_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: node_type (Content type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node_type--node_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "node_type--node_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/topic/{entity}/revision_uid": {
      "get": {
        "summary": "Related: revision_uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/node/topic/{entity}/relationships/revision_uid": {
      "delete": {
        "summary": "Relationship: revision_uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: revision_uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: revision_uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: revision_uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/node/topic/{entity}/social_tagging": {
      "get": {
        "summary": "Related: social_tagging (Taxonomy term - Content tags)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the taxonomy_term--social_tagging resource type through the <em class=\"placeholder\">social_tagging</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:social_tagging Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'social_tagging' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--social_tagging/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/node/topic/{entity}/relationships/social_tagging": {
      "delete": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_term--social_tagging resource type through the <em class=\"placeholder\">social_tagging</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: social_tagging (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/node/topic/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/node/topic/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "resourceVersion",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>."
          },
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the node topic"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Content - Topic"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/post/photo": {
      "get": {
        "summary": "List (Post - Photo)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the post--photo resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "post:photo Schema",
              "description": "Describes the payload for 'post' entities of the 'photo' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/post--photo/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Post - Photo)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">post</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/post--photo"
            }
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": []
      }
    },
    "/post/photo/{entity}/field_post_image": {
      "get": {
        "summary": "Related: field_post_image (File)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_post_image</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/file--file"
            }
          }
        }
      }
    },
    "/post/photo/{entity}/relationships/field_post_image": {
      "delete": {
        "summary": "Relationship: field_post_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_post_image (File)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_post_image</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_post_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_post_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/post/photo/{entity}/field_recipient_group": {
      "get": {
        "summary": "Related: field_recipient_group (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">field_recipient_group</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/post/photo/{entity}/relationships/field_recipient_group": {
      "delete": {
        "summary": "Relationship: field_recipient_group (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_recipient_group (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">field_recipient_group</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_recipient_group (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_recipient_group (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/post/photo/{entity}/field_recipient_user": {
      "get": {
        "summary": "Related: field_recipient_user (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">field_recipient_user</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/post/photo/{entity}/relationships/field_recipient_user": {
      "delete": {
        "summary": "Relationship: field_recipient_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_recipient_user (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">field_recipient_user</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_recipient_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_recipient_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/post/photo/{entity}/{file_field_name}": {
      "post": {
        "summary": "File_upload POST",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">post</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/post--photo"
            }
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "201": {
            "description": "Entity created",
            "schema": {
              "$ref": "#/definitions/post--photo"
            }
          }
        }
      }
    },
    "/post/photo/{file_field_name}": {
      "post": {
        "summary": "File_upload POST",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">post</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/post--photo"
            }
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "201": {
            "description": "Entity created",
            "schema": {
              "$ref": "#/definitions/post--photo"
            }
          }
        }
      }
    },
    "/post/photo/{entity}": {
      "get": {
        "summary": "View (Post - Photo)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the post--photo resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/post--photo"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Post - Photo)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Post - Photo)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">post</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/post--photo"
            }
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": []
      }
    },
    "/post/photo/{entity}/relationships/post_type": {
      "delete": {
        "summary": "Relationship: post_type (Post type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: post_type (Post type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the post_type--post_type resource type through the <em class=\"placeholder\">post_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "post_type--post_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: post_type (Post type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "post_type--post_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "post_type--post_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: post_type (Post type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "post_type--post_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "post_type--post_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/post/photo/{entity}/user_id": {
      "get": {
        "summary": "Related: user_id (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">user_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/post/photo/{entity}/relationships/user_id": {
      "delete": {
        "summary": "Relationship: user_id (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: user_id (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">user_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: user_id (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: user_id (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post photo"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Post - Photo"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/post/post": {
      "get": {
        "summary": "List (Post - Post)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the post--post resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "post Schema",
              "description": "Describes the payload for 'post' entities.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/post--post/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Post - Post)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">post</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/post--post"
            }
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": []
      }
    },
    "/post/post/{entity}/field_recipient_group": {
      "get": {
        "summary": "Related: field_recipient_group (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">field_recipient_group</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/post/post/{entity}/relationships/field_recipient_group": {
      "delete": {
        "summary": "Relationship: field_recipient_group (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_recipient_group (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">field_recipient_group</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_recipient_group (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_recipient_group (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/post/post/{entity}/field_recipient_user": {
      "get": {
        "summary": "Related: field_recipient_user (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">field_recipient_user</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/post/post/{entity}/relationships/field_recipient_user": {
      "delete": {
        "summary": "Relationship: field_recipient_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_recipient_user (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">field_recipient_user</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_recipient_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_recipient_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/post/post/{entity}": {
      "get": {
        "summary": "View (Post - Post)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the post--post resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/post--post"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Post - Post)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Post - Post)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">post</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/post--post"
            }
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": []
      }
    },
    "/post/post/{entity}/relationships/post_type": {
      "delete": {
        "summary": "Relationship: post_type (Post type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: post_type (Post type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the post_type--post_type resource type through the <em class=\"placeholder\">post_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "post_type--post_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: post_type (Post type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "post_type--post_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "post_type--post_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: post_type (Post type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "post_type--post_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "post_type--post_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/post/post/{entity}/user_id": {
      "get": {
        "summary": "Related: user_id (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">user_id</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/post/post/{entity}/relationships/user_id": {
      "delete": {
        "summary": "Relationship: user_id (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: user_id (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">user_id</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: user_id (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: user_id (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the post post"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Post - Post"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/profile/profile": {
      "get": {
        "summary": "List (Profile - Profile)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the profile--profile resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "profile Schema",
              "description": "Describes the payload for 'profile' entities.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/profile--profile/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Profile - Profile)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">profile</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profile--profile"
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": []
      }
    },
    "/profile/profile/{entity}/field_profile_banner_image": {
      "get": {
        "summary": "Related: field_profile_banner_image (File)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_profile_banner_image</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/file--file"
            }
          }
        }
      }
    },
    "/profile/profile/{entity}/relationships/field_profile_banner_image": {
      "delete": {
        "summary": "Relationship: field_profile_banner_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_profile_banner_image (File)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_profile_banner_image</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_profile_banner_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_profile_banner_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/profile/profile/{entity}/field_profile_expertise": {
      "get": {
        "summary": "Related: field_profile_expertise (Taxonomy term - Expertise)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the taxonomy_term--expertise resource type through the <em class=\"placeholder\">field_profile_expertise</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:expertise Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'expertise' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--expertise/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/profile/profile/{entity}/relationships/field_profile_expertise": {
      "delete": {
        "summary": "Relationship: field_profile_expertise (Taxonomy term - Expertise)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_profile_expertise (Taxonomy term - Expertise)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_term--expertise resource type through the <em class=\"placeholder\">field_profile_expertise</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--expertise"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_profile_expertise (Taxonomy term - Expertise)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--expertise"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--expertise"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_profile_expertise (Taxonomy term - Expertise)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--expertise"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--expertise"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/profile/profile/{entity}/field_profile_image": {
      "get": {
        "summary": "Related: field_profile_image (File)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_profile_image</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/file--file"
            }
          }
        }
      }
    },
    "/profile/profile/{entity}/relationships/field_profile_image": {
      "delete": {
        "summary": "Relationship: field_profile_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_profile_image (File)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_profile_image</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_profile_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_profile_image (File)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "file--file"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/profile/profile/{entity}/field_profile_interests": {
      "get": {
        "summary": "Related: field_profile_interests (Taxonomy term - Interests)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the taxonomy_term--interests resource type through the <em class=\"placeholder\">field_profile_interests</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:interests Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'interests' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--interests/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/profile/profile/{entity}/relationships/field_profile_interests": {
      "delete": {
        "summary": "Relationship: field_profile_interests (Taxonomy term - Interests)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_profile_interests (Taxonomy term - Interests)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_term--interests resource type through the <em class=\"placeholder\">field_profile_interests</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--interests"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_profile_interests (Taxonomy term - Interests)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--interests"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--interests"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_profile_interests (Taxonomy term - Interests)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--interests"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--interests"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/profile/profile/{entity}/field_profile_profile_tag": {
      "get": {
        "summary": "Related: field_profile_profile_tag (Taxonomy term - Profile tag)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the taxonomy_term--profile_tag resource type through the <em class=\"placeholder\">field_profile_profile_tag</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:profile_tag Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'profile_tag' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--profile_tag/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/profile/profile/{entity}/relationships/field_profile_profile_tag": {
      "delete": {
        "summary": "Relationship: field_profile_profile_tag (Taxonomy term - Profile tag)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: field_profile_profile_tag (Taxonomy term - Profile tag)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_term--profile_tag resource type through the <em class=\"placeholder\">field_profile_profile_tag</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--profile_tag"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: field_profile_profile_tag (Taxonomy term - Profile tag)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--profile_tag"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--profile_tag"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: field_profile_profile_tag (Taxonomy term - Profile tag)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--profile_tag"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--profile_tag"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/profile/profile/{entity}/{file_field_name}": {
      "post": {
        "summary": "File_upload POST",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">profile</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profile--profile"
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "201": {
            "description": "Entity created",
            "schema": {
              "$ref": "#/definitions/profile--profile"
            }
          }
        }
      }
    },
    "/profile/profile/{file_field_name}": {
      "post": {
        "summary": "File_upload POST",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">profile</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profile--profile"
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "201": {
            "description": "Entity created",
            "schema": {
              "$ref": "#/definitions/profile--profile"
            }
          }
        }
      }
    },
    "/profile/profile/{entity}": {
      "get": {
        "summary": "View (Profile - Profile)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the profile--profile resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/profile--profile"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Profile - Profile)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Profile - Profile)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">profile</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profile--profile"
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": []
      }
    },
    "/profile/profile/{entity}/relationships/profile_type": {
      "delete": {
        "summary": "Relationship: profile_type (Profile type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: profile_type (Profile type)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the profile_type--profile_type resource type through the <em class=\"placeholder\">profile_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "profile_type--profile_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: profile_type (Profile type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "profile_type--profile_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "profile_type--profile_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: profile_type (Profile type)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "profile_type--profile_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "profile_type--profile_type"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/profile/profile/{entity}/revision_user": {
      "get": {
        "summary": "Related: revision_user (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/profile/profile/{entity}/relationships/revision_user": {
      "delete": {
        "summary": "Relationship: revision_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: revision_user (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: revision_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: revision_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/profile/profile/{entity}/uid": {
      "get": {
        "summary": "Related: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/profile/profile/{entity}/relationships/uid": {
      "delete": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: uid (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: uid (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the profile profile"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Profile - Profile"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/taxonomy_term/expertise": {
      "get": {
        "summary": "List (Taxonomy term - Expertise)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the taxonomy_term--expertise resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:expertise Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'expertise' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--expertise/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Taxonomy term - Expertise)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">taxonomy_term</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taxonomy_term--expertise"
            }
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": []
      }
    },
    "/taxonomy_term/expertise/{entity}": {
      "get": {
        "summary": "View (Taxonomy term - Expertise)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the taxonomy_term--expertise resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term expertise"
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/taxonomy_term--expertise"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Taxonomy term - Expertise)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term expertise"
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Taxonomy term - Expertise)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term expertise"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">taxonomy_term</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taxonomy_term--expertise"
            }
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": []
      }
    },
    "/taxonomy_term/expertise/{entity}/parent": {
      "get": {
        "summary": "Related: parent (Taxonomy term - Expertise)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the taxonomy_term--expertise resource type through the <em class=\"placeholder\">parent</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term expertise"
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:expertise Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'expertise' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--expertise/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/taxonomy_term/expertise/{entity}/relationships/parent": {
      "delete": {
        "summary": "Relationship: parent (Taxonomy term - Expertise)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term expertise"
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: parent (Taxonomy term - Expertise)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_term--expertise resource type through the <em class=\"placeholder\">parent</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term expertise"
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--expertise"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: parent (Taxonomy term - Expertise)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term expertise"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--expertise"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--expertise"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: parent (Taxonomy term - Expertise)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term expertise"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--expertise"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--expertise"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/taxonomy_term/expertise/{entity}/revision_user": {
      "get": {
        "summary": "Related: revision_user (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term expertise"
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/taxonomy_term/expertise/{entity}/relationships/revision_user": {
      "delete": {
        "summary": "Relationship: revision_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term expertise"
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: revision_user (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term expertise"
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: revision_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term expertise"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: revision_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term expertise"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/taxonomy_term/expertise/{entity}/relationships/vid": {
      "delete": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term expertise"
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_vocabulary--taxonomy_vocabulary resource type through the <em class=\"placeholder\">vid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term expertise"
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term expertise"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term expertise"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Expertise"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/taxonomy_term/interests": {
      "get": {
        "summary": "List (Taxonomy term - Interests)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the taxonomy_term--interests resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:interests Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'interests' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--interests/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Taxonomy term - Interests)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">taxonomy_term</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taxonomy_term--interests"
            }
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": []
      }
    },
    "/taxonomy_term/interests/{entity}": {
      "get": {
        "summary": "View (Taxonomy term - Interests)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the taxonomy_term--interests resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term interests"
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/taxonomy_term--interests"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Taxonomy term - Interests)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term interests"
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Taxonomy term - Interests)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term interests"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">taxonomy_term</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taxonomy_term--interests"
            }
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": []
      }
    },
    "/taxonomy_term/interests/{entity}/parent": {
      "get": {
        "summary": "Related: parent (Taxonomy term - Interests)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the taxonomy_term--interests resource type through the <em class=\"placeholder\">parent</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term interests"
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:interests Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'interests' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--interests/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/taxonomy_term/interests/{entity}/relationships/parent": {
      "delete": {
        "summary": "Relationship: parent (Taxonomy term - Interests)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term interests"
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: parent (Taxonomy term - Interests)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_term--interests resource type through the <em class=\"placeholder\">parent</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term interests"
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--interests"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: parent (Taxonomy term - Interests)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term interests"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--interests"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--interests"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: parent (Taxonomy term - Interests)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term interests"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--interests"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--interests"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/taxonomy_term/interests/{entity}/revision_user": {
      "get": {
        "summary": "Related: revision_user (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term interests"
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/taxonomy_term/interests/{entity}/relationships/revision_user": {
      "delete": {
        "summary": "Relationship: revision_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term interests"
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: revision_user (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term interests"
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: revision_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term interests"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: revision_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term interests"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/taxonomy_term/interests/{entity}/relationships/vid": {
      "delete": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term interests"
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_vocabulary--taxonomy_vocabulary resource type through the <em class=\"placeholder\">vid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term interests"
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term interests"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term interests"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Interests"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/taxonomy_term/profile_tag": {
      "get": {
        "summary": "List (Taxonomy term - Profile tag)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the taxonomy_term--profile_tag resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:profile_tag Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'profile_tag' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--profile_tag/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Taxonomy term - Profile tag)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">taxonomy_term</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taxonomy_term--profile_tag"
            }
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": []
      }
    },
    "/taxonomy_term/profile_tag/{entity}": {
      "get": {
        "summary": "View (Taxonomy term - Profile tag)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the taxonomy_term--profile_tag resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term profile_tag"
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/taxonomy_term--profile_tag"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Taxonomy term - Profile tag)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term profile_tag"
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Taxonomy term - Profile tag)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term profile_tag"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">taxonomy_term</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taxonomy_term--profile_tag"
            }
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": []
      }
    },
    "/taxonomy_term/profile_tag/{entity}/parent": {
      "get": {
        "summary": "Related: parent (Taxonomy term - Profile tag)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the taxonomy_term--profile_tag resource type through the <em class=\"placeholder\">parent</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term profile_tag"
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:profile_tag Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'profile_tag' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--profile_tag/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/taxonomy_term/profile_tag/{entity}/relationships/parent": {
      "delete": {
        "summary": "Relationship: parent (Taxonomy term - Profile tag)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term profile_tag"
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: parent (Taxonomy term - Profile tag)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_term--profile_tag resource type through the <em class=\"placeholder\">parent</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term profile_tag"
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--profile_tag"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: parent (Taxonomy term - Profile tag)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term profile_tag"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--profile_tag"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--profile_tag"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: parent (Taxonomy term - Profile tag)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term profile_tag"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--profile_tag"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--profile_tag"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/taxonomy_term/profile_tag/{entity}/revision_user": {
      "get": {
        "summary": "Related: revision_user (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term profile_tag"
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/taxonomy_term/profile_tag/{entity}/relationships/revision_user": {
      "delete": {
        "summary": "Relationship: revision_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term profile_tag"
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: revision_user (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term profile_tag"
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: revision_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term profile_tag"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: revision_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term profile_tag"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/taxonomy_term/profile_tag/{entity}/relationships/vid": {
      "delete": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term profile_tag"
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_vocabulary--taxonomy_vocabulary resource type through the <em class=\"placeholder\">vid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term profile_tag"
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term profile_tag"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term profile_tag"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Profile tag"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/taxonomy_term/social_tagging": {
      "get": {
        "summary": "List (Taxonomy term - Content tags)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the taxonomy_term--social_tagging resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:social_tagging Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'social_tagging' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--social_tagging/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">taxonomy_term</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taxonomy_term--social_tagging"
            }
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": []
      }
    },
    "/taxonomy_term/social_tagging/{entity}": {
      "get": {
        "summary": "View (Taxonomy term - Content tags)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the taxonomy_term--social_tagging resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term social_tagging"
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/taxonomy_term--social_tagging"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term social_tagging"
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term social_tagging"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">taxonomy_term</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taxonomy_term--social_tagging"
            }
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": []
      }
    },
    "/taxonomy_term/social_tagging/{entity}/parent": {
      "get": {
        "summary": "Related: parent (Taxonomy term - Content tags)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the taxonomy_term--social_tagging resource type through the <em class=\"placeholder\">parent</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term social_tagging"
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:social_tagging Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'social_tagging' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--social_tagging/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/taxonomy_term/social_tagging/{entity}/relationships/parent": {
      "delete": {
        "summary": "Relationship: parent (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term social_tagging"
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: parent (Taxonomy term - Content tags)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_term--social_tagging resource type through the <em class=\"placeholder\">parent</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term social_tagging"
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: parent (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term social_tagging"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: parent (Taxonomy term - Content tags)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term social_tagging"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--social_tagging"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/taxonomy_term/social_tagging/{entity}/revision_user": {
      "get": {
        "summary": "Related: revision_user (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term social_tagging"
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/taxonomy_term/social_tagging/{entity}/relationships/revision_user": {
      "delete": {
        "summary": "Relationship: revision_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term social_tagging"
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: revision_user (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term social_tagging"
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: revision_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term social_tagging"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: revision_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term social_tagging"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/taxonomy_term/social_tagging/{entity}/relationships/vid": {
      "delete": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term social_tagging"
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_vocabulary--taxonomy_vocabulary resource type through the <em class=\"placeholder\">vid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term social_tagging"
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term social_tagging"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term social_tagging"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Content tags"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/taxonomy_term/topic_types": {
      "get": {
        "summary": "List (Taxonomy term - Topic types)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the taxonomy_term--topic_types resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:topic_types Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'topic_types' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--topic_types/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (Taxonomy term - Topic types)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">taxonomy_term</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taxonomy_term--topic_types"
            }
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": []
      }
    },
    "/taxonomy_term/topic_types/{entity}": {
      "get": {
        "summary": "View (Taxonomy term - Topic types)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the taxonomy_term--topic_types resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term topic_types"
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/taxonomy_term--topic_types"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (Taxonomy term - Topic types)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term topic_types"
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (Taxonomy term - Topic types)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term topic_types"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">taxonomy_term</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taxonomy_term--topic_types"
            }
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": []
      }
    },
    "/taxonomy_term/topic_types/{entity}/parent": {
      "get": {
        "summary": "Related: parent (Taxonomy term - Topic types)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the taxonomy_term--topic_types resource type through the <em class=\"placeholder\">parent</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term topic_types"
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "taxonomy_term:topic_types Schema",
              "description": "Describes the payload for 'taxonomy_term' entities of the 'topic_types' bundle.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy_term--topic_types/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/taxonomy_term/topic_types/{entity}/relationships/parent": {
      "delete": {
        "summary": "Relationship: parent (Taxonomy term - Topic types)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term topic_types"
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: parent (Taxonomy term - Topic types)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_term--topic_types resource type through the <em class=\"placeholder\">parent</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term topic_types"
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--topic_types"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: parent (Taxonomy term - Topic types)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term topic_types"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--topic_types"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--topic_types"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: parent (Taxonomy term - Topic types)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term topic_types"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--topic_types"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "taxonomy_term--topic_types"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    },
    "/taxonomy_term/topic_types/{entity}/revision_user": {
      "get": {
        "summary": "Related: revision_user (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term topic_types"
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      }
    },
    "/taxonomy_term/topic_types/{entity}/relationships/revision_user": {
      "delete": {
        "summary": "Relationship: revision_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term topic_types"
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: revision_user (User)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">revision_user</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term topic_types"
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: revision_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term topic_types"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: revision_user (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term topic_types"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "user--user"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/taxonomy_term/topic_types/{entity}/relationships/vid": {
      "delete": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term topic_types"
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_vocabulary--taxonomy_vocabulary resource type through the <em class=\"placeholder\">vid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term topic_types"
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term topic_types"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: vid (Taxonomy vocabulary)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the taxonomy_term topic_types"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "Taxonomy term - Topic types"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "taxonomy_vocabulary--taxonomy_vocabulary"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/user/user": {
      "get": {
        "summary": "List (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the user--user resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>."
          },
          {
            "name": "sort",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>."
          },
          {
            "name": "page",
            "in": "query",
            "type": "array",
            "required": false,
            "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>."
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>."
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "title": "user Schema",
              "description": "Describes the payload for 'user' entities.",
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/user--user/properties/data"
                  }
                },
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "type": "object",
                  "additionalProperties": true
                },
                "links": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "A string containing the link's URL . ",
                        "type": "string",
                        "format": "uri - reference"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                },
                "jsonapi": {
                  "description": "An object describing the server's implementation",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": true
            }
          }
        }
      },
      "post": {
        "summary": "Create (User)",
        "description": null,
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">user</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        ],
        "tags": [
          "User"
        ],
        "responses": []
      }
    },
    "/user/user/{entity}/groups": {
      "get": {
        "summary": "Related: groups (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">groups</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/user/user/{entity}/relationships/groups": {
      "delete": {
        "summary": "Relationship: groups (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: groups (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">groups</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: groups (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: groups (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/user/user/{entity}/groups_type_closed_group": {
      "get": {
        "summary": "Related: groups_type_closed_group (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">groups_type_closed_group</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--closed_group"
            }
          }
        }
      }
    },
    "/user/user/{entity}/relationships/groups_type_closed_group": {
      "delete": {
        "summary": "Relationship: groups_type_closed_group (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: groups_type_closed_group (Group - Closed group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--closed_group resource type through the <em class=\"placeholder\">groups_type_closed_group</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: groups_type_closed_group (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: groups_type_closed_group (Group - Closed group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--closed_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/user/user/{entity}/groups_type_open_group": {
      "get": {
        "summary": "Related: groups_type_open_group (Group - Open group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--open_group resource type through the <em class=\"placeholder\">groups_type_open_group</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--open_group"
            }
          }
        }
      }
    },
    "/user/user/{entity}/relationships/groups_type_open_group": {
      "delete": {
        "summary": "Relationship: groups_type_open_group (Group - Open group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: groups_type_open_group (Group - Open group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--open_group resource type through the <em class=\"placeholder\">groups_type_open_group</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: groups_type_open_group (Group - Open group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: groups_type_open_group (Group - Open group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--open_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/user/user/{entity}/groups_type_public_group": {
      "get": {
        "summary": "Related: groups_type_public_group (Group - Public group)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the group--public_group resource type through the <em class=\"placeholder\">groups_type_public_group</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/group--public_group"
            }
          }
        }
      }
    },
    "/user/user/{entity}/relationships/groups_type_public_group": {
      "delete": {
        "summary": "Relationship: groups_type_public_group (Group - Public group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: groups_type_public_group (Group - Public group)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the group--public_group resource type through the <em class=\"placeholder\">groups_type_public_group</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: groups_type_public_group (Group - Public group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: groups_type_public_group (Group - Public group)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "group--public_group"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/user/user/{entity}": {
      "get": {
        "summary": "View (User)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the user--user resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "201": {
            "description": "Entity deleted"
          }
        }
      },
      "patch": {
        "summary": "Update (User)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The <em class=\"placeholder\">user</em> object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user--user"
            }
          }
        ],
        "tags": [
          "User"
        ],
        "responses": []
      }
    },
    "/user/user/{entity}/profile_profiles": {
      "get": {
        "summary": "Related: profile_profiles (Profile - Profile)",
        "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the profile--profile resource type through the <em class=\"placeholder\">profile_profiles</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/profile--profile"
            }
          }
        }
      }
    },
    "/user/user/{entity}/relationships/profile_profiles": {
      "delete": {
        "summary": "Relationship: profile_profiles (Profile - Profile)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: profile_profiles (Profile - Profile)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the profile--profile resource type through the <em class=\"placeholder\">profile_profiles</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "profile--profile"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: profile_profiles (Profile - Profile)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "profile--profile"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "profile--profile"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: profile_profiles (Profile - Profile)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "profile--profile"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "The \"type\" and \"id\" to non-empty members.",
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "type": {
                      "title": "Resource type name",
                      "type": "string",
                      "enum": [
                        "profile--profile"
                      ]
                    },
                    "id": {
                      "title": "Resource ID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "meta": {
                      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                      "type": "object",
                      "additionalProperties": true,
                      "properties": {}
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/user/user/{entity}/relationships/roles": {
      "delete": {
        "summary": "Relationship: roles (Role)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "204": {
            "description": "no content"
          }
        }
      },
      "get": {
        "summary": "Relationship: roles (Role)",
        "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user_role--user_role resource type through the <em class=\"placeholder\">roles</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "user_role--user_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Relationship: roles (Role)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "user_role--user_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "user_role--user_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Relationship: roles (Role)",
        "description": null,
        "parameters": [
          {
            "name": "entity",
            "required": true,
            "in": "path",
            "type": "uuid",
            "description": "The uuid of the user user"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource identifier object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "user_role--user_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        ],
        "tags": [
          "User"
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
                  "type": "array",
                  "items": {
                    "description": "The \"type\" and \"id\" to non-empty members.",
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "title": "Resource type name",
                        "type": "string",
                        "enum": [
                          "user_role--user_role"
                        ]
                      },
                      "id": {
                        "title": "Resource ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "meta": {
                        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "uniqueItems": true
                }
              }
            }
          }
        }
      }
    }
  }
}
